[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4742 MiB DRAM
Equilibrium_T_7_0.py:027  |  system = hoomd.init.read_gsd("T_CM_7.0_P_1.4_ramp.gsd",frame = -1)
notice(2): Group "all" created containing 1000 particles
Equilibrium_T_7_0.py:031  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_T_7_0.py:043  |  nl = hoomd.md.nlist.tree();
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_T_7_0.py:045  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist = nl)
Equilibrium_T_7_0.py:046  |  lj.set_params(mode = 'shift')
Equilibrium_T_7_0.py:050  |  lj.pair_coeff.set('M','M', epsilon = 1.0, sigma = 1.0)
Equilibrium_T_7_0.py:051  |  lj.pair_coeff.set('A','A', epsilon = 1.0, sigma = 1.0)
Equilibrium_T_7_0.py:052  |  lj.pair_coeff.set('M','A', epsilon = 1.0, sigma = 1.0)
Equilibrium_T_7_0.py:056  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_T_7_0.py:060  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
Equilibrium_T_7_0.py:068  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = t_max, tau = 0.5, tauP = 0.5, P = p_max);
Equilibrium_T_7_0.py:077  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_T_7_0.py:093  |                 group = hoomd.group.all(),
Equilibrium_T_7_0.py:091  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite = True); 
Equilibrium_T_7_0.py:095  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite = True); 
Equilibrium_T_7_0.py:106  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9000
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 1746480 / 1844000 | TPS 247.916 | ETA 00:06:33
Time 00:00:20 | Step 1749194 / 1844000 | TPS 271.387 | ETA 00:05:49
Time 00:00:30 | Step 1751924 / 1844000 | TPS 272.94 | ETA 00:05:37
Time 00:00:40 | Step 1754644 / 1844000 | TPS 271.826 | ETA 00:05:28
Time 00:00:50 | Step 1757332 / 1844000 | TPS 268.773 | ETA 00:05:22
Time 00:01:00 | Step 1760034 / 1844000 | TPS 270.127 | ETA 00:05:10
Time 00:01:10 | Step 1762741 / 1844000 | TPS 270.513 | ETA 00:05:00
Time 00:01:20 | Step 1765467 / 1844000 | TPS 272.542 | ETA 00:04:48
Time 00:01:30 | Step 1768194 / 1844000 | TPS 272.615 | ETA 00:04:38
Time 00:01:40 | Step 1770921 / 1844000 | TPS 272.547 | ETA 00:04:28
Time 00:01:50 | Step 1773649 / 1844000 | TPS 272.792 | ETA 00:04:17
Time 00:02:00 | Step 1776376 / 1844000 | TPS 272.691 | ETA 00:04:07
Time 00:02:10 | Step 1779129 / 1844000 | TPS 275.298 | ETA 00:03:55
Time 00:02:20 | Step 1781902 / 1844000 | TPS 277.189 | ETA 00:03:44
Time 00:02:30 | Step 1784626 / 1844000 | TPS 272.338 | ETA 00:03:38
Time 00:02:40 | Step 1787361 / 1844000 | TPS 273.406 | ETA 00:03:27
Time 00:02:50 | Step 1790094 / 1844000 | TPS 273.237 | ETA 00:03:17
Time 00:03:00 | Step 1793101 / 1844000 | TPS 293.164 | ETA 00:02:53
Time 00:03:10 | Step 1799701 / 1844000 | TPS 659.186 | ETA 00:01:07
Time 00:03:20 | Step 1806301 / 1844000 | TPS 658.591 | ETA 00:00:57
Time 00:03:30 | Step 1812901 / 1844000 | TPS 659.092 | ETA 00:00:47
Time 00:03:40 | Step 1819501 / 1844000 | TPS 658.709 | ETA 00:00:37
Time 00:03:50 | Step 1826101 / 1844000 | TPS 658.575 | ETA 00:00:27
Time 00:04:00 | Step 1832701 / 1844000 | TPS 659.145 | ETA 00:00:17
Time 00:04:10 | Step 1839301 / 1844000 | TPS 658.538 | ETA 00:00:07
Time 00:04:17 | Step 1844000 / 1844000 | TPS 679.289 | ETA 00:00:00
Average TPS: 388.583
---------
-- Neighborlist stats:
22569 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 1
** run complete **
