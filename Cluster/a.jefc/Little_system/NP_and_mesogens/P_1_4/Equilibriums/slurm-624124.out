[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_52.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_52.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_52.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_52.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_52.py:064  |  lj.set_params(mode='shift')
Equilibrium_52.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_52.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_52.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_52.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_52.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_52.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_52.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_52.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_52.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_52.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 10.0, tauP = 10.0, P = pressure);
Equilibrium_52.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_52.py:110  |                 group = hoomd.group.all(),
Equilibrium_52.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_52.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_52.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 463313 / 561000 | TPS 231.27 | ETA 00:07:02
Time 00:00:20 | Step 465905 / 561000 | TPS 259.185 | ETA 00:06:06
Time 00:00:30 | Step 468485 / 561000 | TPS 257.857 | ETA 00:05:58
Time 00:00:40 | Step 471077 / 561000 | TPS 259.197 | ETA 00:05:46
Time 00:00:50 | Step 473653 / 561000 | TPS 257.383 | ETA 00:05:39
Time 00:01:00 | Step 476240 / 561000 | TPS 258.577 | ETA 00:05:27
Time 00:01:10 | Step 478847 / 561000 | TPS 260.698 | ETA 00:05:15
Time 00:01:20 | Step 481395 / 561000 | TPS 254.581 | ETA 00:05:12
Time 00:01:30 | Step 483927 / 561000 | TPS 253.192 | ETA 00:05:04
Time 00:01:40 | Step 486541 / 561000 | TPS 261.362 | ETA 00:04:44
Time 00:01:50 | Step 489146 / 561000 | TPS 260.488 | ETA 00:04:35
Time 00:02:00 | Step 491701 / 561000 | TPS 255.255 | ETA 00:04:31
Time 00:02:10 | Step 494261 / 561000 | TPS 255.967 | ETA 00:04:20
Time 00:02:20 | Step 496819 / 561000 | TPS 255.675 | ETA 00:04:11
Time 00:02:30 | Step 499402 / 561000 | TPS 258.121 | ETA 00:03:58
Time 00:02:40 | Step 501989 / 561000 | TPS 258.633 | ETA 00:03:48
Time 00:02:50 | Step 504524 / 561000 | TPS 253.395 | ETA 00:03:42
Time 00:03:00 | Step 507082 / 561000 | TPS 255.786 | ETA 00:03:30
Time 00:03:10 | Step 509660 / 561000 | TPS 257.611 | ETA 00:03:19
Time 00:03:20 | Step 512280 / 561000 | TPS 261.869 | ETA 00:03:06
Time 00:03:30 | Step 514882 / 561000 | TPS 260.061 | ETA 00:02:57
Time 00:03:40 | Step 517470 / 561000 | TPS 258.752 | ETA 00:02:48
Time 00:03:50 | Step 520085 / 561000 | TPS 261.482 | ETA 00:02:36
Time 00:04:00 | Step 522712 / 561000 | TPS 262.682 | ETA 00:02:25
Time 00:04:10 | Step 525310 / 561000 | TPS 259.64 | ETA 00:02:17
Time 00:04:20 | Step 527928 / 561000 | TPS 261.768 | ETA 00:02:06
Time 00:04:30 | Step 530514 / 561000 | TPS 258.595 | ETA 00:01:57
Time 00:04:40 | Step 533113 / 561000 | TPS 259.777 | ETA 00:01:47
Time 00:04:50 | Step 535718 / 561000 | TPS 260.336 | ETA 00:01:37
Time 00:05:00 | Step 538325 / 561000 | TPS 260.461 | ETA 00:01:27
Time 00:05:10 | Step 540943 / 561000 | TPS 261.583 | ETA 00:01:16
Time 00:05:20 | Step 543486 / 561000 | TPS 254.161 | ETA 00:01:08
Time 00:05:30 | Step 546075 / 561000 | TPS 258.853 | ETA 00:00:57
Time 00:05:40 | Step 548668 / 561000 | TPS 259.277 | ETA 00:00:47
Time 00:05:50 | Step 551231 / 561000 | TPS 256.176 | ETA 00:00:38
Time 00:06:00 | Step 553785 / 561000 | TPS 255.23 | ETA 00:00:28
Time 00:06:10 | Step 556353 / 561000 | TPS 256.732 | ETA 00:00:18
Time 00:06:20 | Step 558937 / 561000 | TPS 258.346 | ETA 00:00:07
Time 00:06:28 | Step 561000 / 561000 | TPS 259.741 | ETA 00:00:00
Average TPS: 257.675
---------
-- Neighborlist stats:
35077 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 52 / n_neigh_max: 216 / n_neigh_avg: 173.116
shortest rebuild period: 2
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_54.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_54.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_54.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_54.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_54.py:064  |  lj.set_params(mode='shift')
Equilibrium_54.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_54.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_54.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_54.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_54.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_54.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_54.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_54.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_54.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_54.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 10.0, tauP = 10.0, P = pressure);
Equilibrium_54.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_54.py:110  |                 group = hoomd.group.all(),
Equilibrium_54.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_54.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_54.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 512305 / 610000 | TPS 230.323 | ETA 00:07:04
Time 00:00:20 | Step 514865 / 610000 | TPS 255.933 | ETA 00:06:11
Time 00:00:30 | Step 517393 / 610000 | TPS 252.753 | ETA 00:06:06
Time 00:00:40 | Step 519919 / 610000 | TPS 252.531 | ETA 00:05:56
Time 00:00:50 | Step 522456 / 610000 | TPS 253.512 | ETA 00:05:45
Time 00:01:00 | Step 524975 / 610000 | TPS 251.686 | ETA 00:05:37
Time 00:01:10 | Step 527503 / 610000 | TPS 252.578 | ETA 00:05:26
Time 00:01:20 | Step 530058 / 610000 | TPS 255.33 | ETA 00:05:13
Time 00:01:30 | Step 532574 / 610000 | TPS 251.415 | ETA 00:05:07
Time 00:01:40 | Step 535067 / 610000 | TPS 249.117 | ETA 00:05:00
Time 00:01:50 | Step 537599 / 610000 | TPS 253.126 | ETA 00:04:46
Time 00:02:00 | Step 540156 / 610000 | TPS 255.501 | ETA 00:04:33
Time 00:02:10 | Step 542755 / 610000 | TPS 259.717 | ETA 00:04:18
Time 00:02:20 | Step 545307 / 610000 | TPS 255.158 | ETA 00:04:13
Time 00:02:30 | Step 547889 / 610000 | TPS 258.158 | ETA 00:04:00
Time 00:02:40 | Step 550405 / 610000 | TPS 251.586 | ETA 00:03:56
Time 00:02:50 | Step 552966 / 610000 | TPS 255.923 | ETA 00:03:42
Time 00:03:00 | Step 555504 / 610000 | TPS 253.695 | ETA 00:03:34
Time 00:03:10 | Step 558065 / 610000 | TPS 256.088 | ETA 00:03:22
Time 00:03:20 | Step 560582 / 610000 | TPS 251.584 | ETA 00:03:16
Time 00:03:30 | Step 563112 / 610000 | TPS 252.997 | ETA 00:03:05
Time 00:03:40 | Step 565652 / 610000 | TPS 253.964 | ETA 00:02:54
Time 00:03:50 | Step 568229 / 610000 | TPS 257.501 | ETA 00:02:42
Time 00:04:00 | Step 570784 / 610000 | TPS 255.476 | ETA 00:02:33
Time 00:04:10 | Step 573333 / 610000 | TPS 254.732 | ETA 00:02:23
Time 00:04:20 | Step 575895 / 610000 | TPS 256.069 | ETA 00:02:13
Time 00:04:30 | Step 578426 / 610000 | TPS 252.889 | ETA 00:02:04
Time 00:04:40 | Step 581020 / 610000 | TPS 259.316 | ETA 00:01:51
Time 00:04:50 | Step 583571 / 610000 | TPS 254.941 | ETA 00:01:43
Time 00:05:00 | Step 586131 / 610000 | TPS 255.998 | ETA 00:01:33
Time 00:05:10 | Step 588655 / 610000 | TPS 252.309 | ETA 00:01:24
Time 00:05:20 | Step 591195 / 610000 | TPS 253.775 | ETA 00:01:14
Time 00:05:30 | Step 593722 / 610000 | TPS 252.557 | ETA 00:01:04
Time 00:05:40 | Step 596345 / 610000 | TPS 262.144 | ETA 00:00:52
Time 00:05:50 | Step 598967 / 610000 | TPS 262.163 | ETA 00:00:42
Time 00:06:00 | Step 601560 / 610000 | TPS 259.186 | ETA 00:00:32
Time 00:06:10 | Step 604199 / 610000 | TPS 263.747 | ETA 00:00:21
Time 00:06:20 | Step 606826 / 610000 | TPS 262.472 | ETA 00:00:12
Time 00:06:30 | Step 609460 / 610000 | TPS 263.321 | ETA 00:00:02
Time 00:06:32 | Step 610000 / 610000 | TPS 261.761 | ETA 00:00:00
Average TPS: 254.94
---------
-- Neighborlist stats:
35801 normal updates / 335 forced updates / 0 dangerous updates
n_neigh_min: 47 / n_neigh_max: 195 / n_neigh_avg: 160.173
shortest rebuild period: 2
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_56.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_56.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_56.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_56.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_56.py:064  |  lj.set_params(mode='shift')
Equilibrium_56.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_56.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_56.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_56.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_56.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_56.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_56.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_56.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_56.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_56.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 10.0, tauP = 10.0, P = pressure);
Equilibrium_56.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_56.py:110  |                 group = hoomd.group.all(),
Equilibrium_56.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_56.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_56.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 561348 / 659000 | TPS 234.759 | ETA 00:06:55
Time 00:00:20 | Step 563921 / 659000 | TPS 257.076 | ETA 00:06:09
Time 00:00:30 | Step 566439 / 659000 | TPS 251.773 | ETA 00:06:07
Time 00:00:40 | Step 568971 / 659000 | TPS 252.989 | ETA 00:05:55
Time 00:00:50 | Step 571480 / 659000 | TPS 250.893 | ETA 00:05:48
Time 00:01:00 | Step 574082 / 659000 | TPS 260.021 | ETA 00:05:26
Time 00:01:10 | Step 576638 / 659000 | TPS 255.396 | ETA 00:05:22
Time 00:01:20 | Step 579146 / 659000 | TPS 250.79 | ETA 00:05:18
Time 00:01:30 | Step 581679 / 659000 | TPS 253.216 | ETA 00:05:05
Time 00:01:40 | Step 584212 / 659000 | TPS 253.136 | ETA 00:04:55
Time 00:01:50 | Step 586758 / 659000 | TPS 254.558 | ETA 00:04:43
Time 00:02:00 | Step 589302 / 659000 | TPS 254.393 | ETA 00:04:33
Time 00:02:10 | Step 591846 / 659000 | TPS 254.364 | ETA 00:04:24
Time 00:02:20 | Step 594349 / 659000 | TPS 250.139 | ETA 00:04:18
Time 00:02:30 | Step 596899 / 659000 | TPS 254.883 | ETA 00:04:03
Time 00:02:40 | Step 599424 / 659000 | TPS 252.435 | ETA 00:03:56
Time 00:02:50 | Step 601936 / 659000 | TPS 251.074 | ETA 00:03:47
Time 00:03:00 | Step 604488 / 659000 | TPS 255.196 | ETA 00:03:33
Time 00:03:10 | Step 607016 / 659000 | TPS 252.763 | ETA 00:03:25
Time 00:03:20 | Step 609539 / 659000 | TPS 252.192 | ETA 00:03:16
Time 00:03:30 | Step 612051 / 659000 | TPS 251.199 | ETA 00:03:06
Time 00:03:40 | Step 614541 / 659000 | TPS 248.917 | ETA 00:02:58
Time 00:03:50 | Step 617063 / 659000 | TPS 252.142 | ETA 00:02:46
Time 00:04:00 | Step 619605 / 659000 | TPS 254.114 | ETA 00:02:35
Time 00:04:10 | Step 622117 / 659000 | TPS 251.075 | ETA 00:02:26
Time 00:04:20 | Step 624656 / 659000 | TPS 253.859 | ETA 00:02:15
Time 00:04:30 | Step 627186 / 659000 | TPS 252.774 | ETA 00:02:05
Time 00:04:40 | Step 629693 / 659000 | TPS 250.54 | ETA 00:01:56
Time 00:04:50 | Step 632255 / 659000 | TPS 256.191 | ETA 00:01:44
Time 00:05:00 | Step 634847 / 659000 | TPS 259.197 | ETA 00:01:33
Time 00:05:10 | Step 637372 / 659000 | TPS 252.339 | ETA 00:01:25
Time 00:05:20 | Step 639910 / 659000 | TPS 253.674 | ETA 00:01:15
Time 00:05:30 | Step 642499 / 659000 | TPS 258.865 | ETA 00:01:03
Time 00:05:40 | Step 645163 / 659000 | TPS 266.18 | ETA 00:00:51
Time 00:05:50 | Step 647808 / 659000 | TPS 264.439 | ETA 00:00:42
Time 00:06:00 | Step 650359 / 659000 | TPS 254.938 | ETA 00:00:33
Time 00:06:10 | Step 652921 / 659000 | TPS 256.166 | ETA 00:00:23
Time 00:06:20 | Step 655528 / 659000 | TPS 260.479 | ETA 00:00:13
Time 00:06:30 | Step 658150 / 659000 | TPS 262.038 | ETA 00:00:03
Time 00:06:33 | Step 659000 / 659000 | TPS 262.84 | ETA 00:00:00
Average TPS: 254.205
---------
-- Neighborlist stats:
36828 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 45 / n_neigh_max: 194 / n_neigh_avg: 152.455
shortest rebuild period: 2
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_58.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_58.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_58.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_58.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_58.py:064  |  lj.set_params(mode='shift')
Equilibrium_58.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_58.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_58.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_58.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_58.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_58.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_58.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_58.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_58.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_58.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 10.0, tauP = 10.0, P = pressure);
Equilibrium_58.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_58.py:110  |                 group = hoomd.group.all(),
Equilibrium_58.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_58.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_58.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 610317 / 708000 | TPS 231.611 | ETA 00:07:01
Time 00:00:20 | Step 612908 / 708000 | TPS 259.084 | ETA 00:06:07
Time 00:00:30 | Step 615457 / 708000 | TPS 254.894 | ETA 00:06:03
Time 00:00:40 | Step 618009 / 708000 | TPS 255.086 | ETA 00:05:52
Time 00:00:50 | Step 620560 / 708000 | TPS 254.961 | ETA 00:05:42
Time 00:01:00 | Step 623144 / 708000 | TPS 258.379 | ETA 00:05:28
Time 00:01:10 | Step 625762 / 708000 | TPS 261.649 | ETA 00:05:14
Time 00:01:20 | Step 628288 / 708000 | TPS 252.572 | ETA 00:05:15
Time 00:01:30 | Step 630896 / 708000 | TPS 260.711 | ETA 00:04:55
Time 00:01:40 | Step 633433 / 708000 | TPS 253.603 | ETA 00:04:54
Time 00:01:50 | Step 635967 / 708000 | TPS 253.346 | ETA 00:04:44
Time 00:02:00 | Step 638540 / 708000 | TPS 257.221 | ETA 00:04:30
Time 00:02:10 | Step 641152 / 708000 | TPS 260.976 | ETA 00:04:16
Time 00:02:20 | Step 643752 / 708000 | TPS 259.99 | ETA 00:04:07
Time 00:02:30 | Step 646320 / 708000 | TPS 256.75 | ETA 00:04:00
Time 00:02:40 | Step 648870 / 708000 | TPS 254.985 | ETA 00:03:51
Time 00:02:50 | Step 651398 / 708000 | TPS 252.641 | ETA 00:03:44
Time 00:03:00 | Step 653948 / 708000 | TPS 254.883 | ETA 00:03:32
Time 00:03:10 | Step 656526 / 708000 | TPS 257.783 | ETA 00:03:19
Time 00:03:20 | Step 659081 / 708000 | TPS 255.496 | ETA 00:03:11
Time 00:03:30 | Step 661652 / 708000 | TPS 257.089 | ETA 00:03:00
Time 00:03:40 | Step 664210 / 708000 | TPS 255.746 | ETA 00:02:51
Time 00:03:50 | Step 666812 / 708000 | TPS 260.142 | ETA 00:02:38
Time 00:04:00 | Step 669471 / 708000 | TPS 265.813 | ETA 00:02:24
Time 00:04:10 | Step 672073 / 708000 | TPS 260.115 | ETA 00:02:18
Time 00:04:20 | Step 674680 / 708000 | TPS 260.689 | ETA 00:02:07
Time 00:04:30 | Step 677232 / 708000 | TPS 254.964 | ETA 00:02:00
Time 00:04:40 | Step 679788 / 708000 | TPS 255.427 | ETA 00:01:50
Time 00:04:50 | Step 682364 / 708000 | TPS 257.492 | ETA 00:01:39
Time 00:05:00 | Step 684957 / 708000 | TPS 259.253 | ETA 00:01:28
Time 00:05:10 | Step 687550 / 708000 | TPS 259.293 | ETA 00:01:18
Time 00:05:20 | Step 690086 / 708000 | TPS 253.59 | ETA 00:01:10
Time 00:05:30 | Step 692639 / 708000 | TPS 255.123 | ETA 00:01:00
Time 00:05:40 | Step 695287 / 708000 | TPS 264.794 | ETA 00:00:48
Time 00:05:50 | Step 697894 / 708000 | TPS 260.504 | ETA 00:00:38
Time 00:06:00 | Step 700482 / 708000 | TPS 258.739 | ETA 00:00:29
Time 00:06:10 | Step 703077 / 708000 | TPS 259.337 | ETA 00:00:18
Time 00:06:20 | Step 705663 / 708000 | TPS 258.417 | ETA 00:00:09
Time 00:06:29 | Step 708000 / 708000 | TPS 255.902 | ETA 00:00:00
Average TPS: 256.901
---------
-- Neighborlist stats:
38080 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 37 / n_neigh_max: 183 / n_neigh_avg: 143.795
shortest rebuild period: 2
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_62.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_62.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_62.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_62.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_62.py:064  |  lj.set_params(mode='shift')
Equilibrium_62.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_62.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_62.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_62.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_62.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_62.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_62.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_62.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_62.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_62.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 15.0, tauP = 15.0, P = pressure);
Equilibrium_62.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_62.py:110  |                 group = hoomd.group.all(),
Equilibrium_62.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_62.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_62.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 708345 / 806000 | TPS 234.478 | ETA 00:06:56
Time 00:00:20 | Step 710928 / 806000 | TPS 258.263 | ETA 00:06:08
Time 00:00:30 | Step 713493 / 806000 | TPS 256.42 | ETA 00:06:00
Time 00:00:40 | Step 716104 / 806000 | TPS 261.029 | ETA 00:05:44
Time 00:00:50 | Step 718660 / 806000 | TPS 255.528 | ETA 00:05:41
Time 00:01:00 | Step 721173 / 806000 | TPS 251.29 | ETA 00:05:37
Time 00:01:10 | Step 723756 / 806000 | TPS 258.259 | ETA 00:05:18
Time 00:01:20 | Step 726307 / 806000 | TPS 254.9 | ETA 00:05:12
Time 00:01:30 | Step 728897 / 806000 | TPS 258.968 | ETA 00:04:57
Time 00:01:40 | Step 731477 / 806000 | TPS 257.947 | ETA 00:04:48
Time 00:01:50 | Step 734089 / 806000 | TPS 261.104 | ETA 00:04:35
Time 00:02:00 | Step 736682 / 806000 | TPS 259.105 | ETA 00:04:27
Time 00:02:10 | Step 739253 / 806000 | TPS 256.876 | ETA 00:04:19
Time 00:02:20 | Step 741844 / 806000 | TPS 259.014 | ETA 00:04:07
Time 00:02:30 | Step 744420 / 806000 | TPS 257.488 | ETA 00:03:59
Time 00:02:40 | Step 746964 / 806000 | TPS 254.372 | ETA 00:03:52
Time 00:02:50 | Step 749557 / 806000 | TPS 259.18 | ETA 00:03:37
Time 00:03:00 | Step 752145 / 806000 | TPS 258.725 | ETA 00:03:28
Time 00:03:10 | Step 754736 / 806000 | TPS 259.026 | ETA 00:03:17
Time 00:03:20 | Step 757275 / 806000 | TPS 253.697 | ETA 00:03:12
Time 00:03:30 | Step 759834 / 806000 | TPS 255.736 | ETA 00:03:00
Time 00:03:40 | Step 762383 / 806000 | TPS 254.755 | ETA 00:02:51
Time 00:03:50 | Step 764981 / 806000 | TPS 259.8 | ETA 00:02:37
Time 00:04:00 | Step 767555 / 806000 | TPS 257.233 | ETA 00:02:29
Time 00:04:10 | Step 770132 / 806000 | TPS 257.481 | ETA 00:02:19
Time 00:04:20 | Step 772715 / 806000 | TPS 258.158 | ETA 00:02:08
Time 00:04:30 | Step 775265 / 806000 | TPS 254.818 | ETA 00:02:00
Time 00:04:40 | Step 777811 / 806000 | TPS 254.501 | ETA 00:01:50
Time 00:04:50 | Step 780385 / 806000 | TPS 257.251 | ETA 00:01:39
Time 00:05:00 | Step 782959 / 806000 | TPS 257.384 | ETA 00:01:29
Time 00:05:10 | Step 785534 / 806000 | TPS 257.454 | ETA 00:01:19
Time 00:05:20 | Step 788120 / 806000 | TPS 258.555 | ETA 00:01:09
Time 00:05:30 | Step 790686 / 806000 | TPS 256.593 | ETA 00:00:59
Time 00:05:40 | Step 793259 / 806000 | TPS 257.224 | ETA 00:00:49
Time 00:05:50 | Step 795888 / 806000 | TPS 262.851 | ETA 00:00:38
Time 00:06:00 | Step 798520 / 806000 | TPS 263.008 | ETA 00:00:28
Time 00:06:10 | Step 801039 / 806000 | TPS 251.696 | ETA 00:00:19
Time 00:06:20 | Step 803654 / 806000 | TPS 261.347 | ETA 00:00:08
Time 00:06:29 | Step 806000 / 806000 | TPS 257.799 | ETA 00:00:00
Average TPS: 256.903
---------
-- Neighborlist stats:
40818 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 43 / n_neigh_max: 184 / n_neigh_avg: 137.055
shortest rebuild period: 1
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_64.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_64.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_64.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_64.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_64.py:064  |  lj.set_params(mode='shift')
Equilibrium_64.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_64.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_64.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_64.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_64.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_64.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_64.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_64.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_64.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_64.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 15.0, tauP = 15.0, P = pressure);
Equilibrium_64.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_64.py:110  |                 group = hoomd.group.all(),
Equilibrium_64.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_64.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_64.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 757364 / 855000 | TPS 236.397 | ETA 00:06:53
Time 00:00:20 | Step 759857 / 855000 | TPS 249.162 | ETA 00:06:21
Time 00:00:30 | Step 762421 / 855000 | TPS 256.325 | ETA 00:06:01
Time 00:00:40 | Step 765027 / 855000 | TPS 260.55 | ETA 00:05:45
Time 00:00:50 | Step 767568 / 855000 | TPS 254.022 | ETA 00:05:44
Time 00:01:00 | Step 770135 / 855000 | TPS 256.682 | ETA 00:05:30
Time 00:01:10 | Step 772749 / 855000 | TPS 261.194 | ETA 00:05:14
Time 00:01:20 | Step 775319 / 855000 | TPS 256.875 | ETA 00:05:10
Time 00:01:30 | Step 777893 / 855000 | TPS 257.339 | ETA 00:04:59
Time 00:01:40 | Step 780483 / 855000 | TPS 258.824 | ETA 00:04:47
Time 00:01:50 | Step 783083 / 855000 | TPS 259.959 | ETA 00:04:36
Time 00:02:00 | Step 785620 / 855000 | TPS 253.696 | ETA 00:04:33
Time 00:02:10 | Step 788180 / 855000 | TPS 255.895 | ETA 00:04:21
Time 00:02:20 | Step 790789 / 855000 | TPS 260.886 | ETA 00:04:06
Time 00:02:30 | Step 793387 / 855000 | TPS 259.599 | ETA 00:03:57
Time 00:02:40 | Step 795987 / 855000 | TPS 259.909 | ETA 00:03:47
Time 00:02:50 | Step 798632 / 855000 | TPS 264.461 | ETA 00:03:33
Time 00:03:00 | Step 801256 / 855000 | TPS 262.207 | ETA 00:03:24
Time 00:03:10 | Step 803877 / 855000 | TPS 262.085 | ETA 00:03:15
Time 00:03:20 | Step 806469 / 855000 | TPS 259.136 | ETA 00:03:07
Time 00:03:30 | Step 809101 / 855000 | TPS 263.051 | ETA 00:02:54
Time 00:03:40 | Step 811629 / 855000 | TPS 252.797 | ETA 00:02:51
Time 00:03:50 | Step 814209 / 855000 | TPS 257.902 | ETA 00:02:38
Time 00:04:00 | Step 816832 / 855000 | TPS 262.21 | ETA 00:02:25
Time 00:04:10 | Step 819422 / 855000 | TPS 258.847 | ETA 00:02:17
Time 00:04:20 | Step 822011 / 855000 | TPS 258.804 | ETA 00:02:07
Time 00:04:30 | Step 824618 / 855000 | TPS 260.591 | ETA 00:01:56
Time 00:04:40 | Step 827214 / 855000 | TPS 259.444 | ETA 00:01:47
Time 00:04:50 | Step 829792 / 855000 | TPS 257.729 | ETA 00:01:37
Time 00:05:00 | Step 832354 / 855000 | TPS 256.135 | ETA 00:01:28
Time 00:05:10 | Step 834862 / 855000 | TPS 250.661 | ETA 00:01:20
Time 00:05:20 | Step 837367 / 855000 | TPS 250.483 | ETA 00:01:10
Time 00:05:30 | Step 839945 / 855000 | TPS 257.788 | ETA 00:00:58
Time 00:05:40 | Step 842569 / 855000 | TPS 262.233 | ETA 00:00:47
Time 00:05:50 | Step 845127 / 855000 | TPS 255.613 | ETA 00:00:38
Time 00:06:00 | Step 847762 / 855000 | TPS 263.411 | ETA 00:00:27
Time 00:06:10 | Step 850365 / 855000 | TPS 260.121 | ETA 00:00:17
Time 00:06:20 | Step 852995 / 855000 | TPS 263 | ETA 00:00:07
Time 00:06:27 | Step 855000 / 855000 | TPS 263.845 | ETA 00:00:00
Average TPS: 257.909
---------
-- Neighborlist stats:
42406 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 40 / n_neigh_max: 169 / n_neigh_avg: 116.265
shortest rebuild period: 1
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0m**ERROR**: nlist.tree(): Particle 385 is out of bounds (x: -57.9521, y: -26.0691, z: 20.2329, fx: -1.6756, fy: -0.47867, fz:1.25957)
HOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_66.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_66.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_66.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_66.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_66.py:064  |  lj.set_params(mode='shift')
Equilibrium_66.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_66.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_66.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_66.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_66.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_66.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_66.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_66.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_66.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_66.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 15.0, tauP = 15.0, P = pressure);
Equilibrium_66.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_66.py:110  |                 group = hoomd.group.all(),
Equilibrium_66.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_66.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_66.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Traceback (most recent call last):
  File "Equilibrium_66.py", line 123, in <module>
    hoomd.run(steps)
  File "/usr/local/lib/python3.5/dist-packages/hoomd/__init__.py", line 194, in run
    context.current.system.run(int(tsteps), callback_period, callback, limit_hours, int(limit_multiple));
RuntimeError: Error updating neighborlist
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_68.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_68.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_68.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_68.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_68.py:064  |  lj.set_params(mode='shift')
Equilibrium_68.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_68.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_68.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_68.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_68.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_68.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_68.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_68.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_68.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_68.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 15.0, tauP = 15.0, P = pressure);
Equilibrium_68.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_68.py:110  |                 group = hoomd.group.all(),
Equilibrium_68.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_68.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_68.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 855652 / 953000 | TPS 265.187 | ETA 00:06:07
Time 00:00:20 | Step 858341 / 953000 | TPS 268.884 | ETA 00:05:52
Time 00:00:30 | Step 861036 / 953000 | TPS 269.482 | ETA 00:05:41
Time 00:00:40 | Step 863736 / 953000 | TPS 269.881 | ETA 00:05:30
Time 00:00:50 | Step 866427 / 953000 | TPS 268.984 | ETA 00:05:21
Time 00:01:00 | Step 869103 / 953000 | TPS 267.479 | ETA 00:05:13
Time 00:01:10 | Step 871825 / 953000 | TPS 272.051 | ETA 00:04:58
Time 00:01:20 | Step 874635 / 953000 | TPS 280.993 | ETA 00:04:38
Time 00:01:30 | Step 877432 / 953000 | TPS 279.643 | ETA 00:04:30
Time 00:01:40 | Step 880193 / 953000 | TPS 275.922 | ETA 00:04:23
Time 00:01:50 | Step 882905 / 953000 | TPS 271.108 | ETA 00:04:18
Time 00:02:00 | Step 885590 / 953000 | TPS 268.339 | ETA 00:04:11
Time 00:02:10 | Step 888303 / 953000 | TPS 271.239 | ETA 00:03:58
Time 00:02:20 | Step 890972 / 953000 | TPS 266.776 | ETA 00:03:52
Time 00:02:30 | Step 893712 / 953000 | TPS 273.826 | ETA 00:03:36
Time 00:02:40 | Step 896526 / 953000 | TPS 281.379 | ETA 00:03:20
Time 00:02:50 | Step 899297 / 953000 | TPS 276.96 | ETA 00:03:13
Time 00:03:00 | Step 902062 / 953000 | TPS 276.308 | ETA 00:03:04
Time 00:03:10 | Step 904835 / 953000 | TPS 277.165 | ETA 00:02:53
Time 00:03:20 | Step 907590 / 953000 | TPS 275.37 | ETA 00:02:44
Time 00:03:30 | Step 910219 / 953000 | TPS 262.793 | ETA 00:02:42
Time 00:03:40 | Step 912871 / 953000 | TPS 265.026 | ETA 00:02:31
Time 00:03:50 | Step 915550 / 953000 | TPS 267.75 | ETA 00:02:19
Time 00:04:00 | Step 918271 / 953000 | TPS 271.954 | ETA 00:02:07
Time 00:04:10 | Step 920995 / 953000 | TPS 272.372 | ETA 00:01:57
Time 00:04:20 | Step 923786 / 953000 | TPS 279.027 | ETA 00:01:44
Time 00:04:30 | Step 926607 / 953000 | TPS 281.987 | ETA 00:01:33
Time 00:04:40 | Step 929320 / 953000 | TPS 271.293 | ETA 00:01:27
Time 00:04:50 | Step 932004 / 953000 | TPS 268.244 | ETA 00:01:18
Time 00:05:00 | Step 934681 / 953000 | TPS 267.539 | ETA 00:01:08
Time 00:05:10 | Step 937365 / 953000 | TPS 268.384 | ETA 00:00:58
Time 00:05:20 | Step 940045 / 953000 | TPS 267.888 | ETA 00:00:48
Time 00:05:30 | Step 942734 / 953000 | TPS 268.745 | ETA 00:00:38
Time 00:05:40 | Step 945454 / 953000 | TPS 271.896 | ETA 00:00:27
Time 00:05:50 | Step 948296 / 953000 | TPS 284.002 | ETA 00:00:16
Time 00:06:00 | Step 951152 / 953000 | TPS 285.44 | ETA 00:00:06
Time 00:06:07 | Step 953000 / 953000 | TPS 276.226 | ETA 00:00:00
Average TPS: 272.604
---------
-- Neighborlist stats:
44784 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 40 / n_neigh_max: 138 / n_neigh_avg: 105.699
shortest rebuild period: 2
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_70.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_70.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_70.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_70.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_70.py:064  |  lj.set_params(mode='shift')
Equilibrium_70.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_70.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_70.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_70.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_70.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_70.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_70.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_70.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_70.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_70.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 20.0, tauP = 20.0, P = pressure);
Equilibrium_70.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_70.py:110  |                 group = hoomd.group.all(),
Equilibrium_70.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_70.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_70.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 904512 / 1002000 | TPS 251.066 | ETA 00:06:28
Time 00:00:20 | Step 907213 / 1002000 | TPS 269.967 | ETA 00:05:51
Time 00:00:30 | Step 909909 / 1002000 | TPS 269.47 | ETA 00:05:41
Time 00:00:40 | Step 912601 / 1002000 | TPS 268.976 | ETA 00:05:32
Time 00:00:50 | Step 915308 / 1002000 | TPS 270.694 | ETA 00:05:20
Time 00:01:00 | Step 917998 / 1002000 | TPS 268.827 | ETA 00:05:12
Time 00:01:10 | Step 920700 / 1002000 | TPS 270.102 | ETA 00:05:00
Time 00:01:20 | Step 924601 / 1002000 | TPS 388.919 | ETA 00:03:19
Time 00:01:30 | Step 931201 / 1002000 | TPS 651.282 | ETA 00:01:48
Time 00:01:40 | Step 937801 / 1002000 | TPS 651.464 | ETA 00:01:38
Time 00:01:50 | Step 944401 / 1002000 | TPS 651.201 | ETA 00:01:28
Time 00:02:00 | Step 951001 / 1002000 | TPS 651.13 | ETA 00:01:18
Time 00:02:10 | Step 957601 / 1002000 | TPS 651.65 | ETA 00:01:08
Time 00:02:21 | Step 964201 / 1002000 | TPS 651.332 | ETA 00:00:58
Time 00:02:31 | Step 970801 / 1002000 | TPS 651.594 | ETA 00:00:47
Time 00:02:41 | Step 977401 / 1002000 | TPS 651.138 | ETA 00:00:37
Time 00:02:51 | Step 984001 / 1002000 | TPS 651.202 | ETA 00:00:27
Time 00:03:01 | Step 990601 / 1002000 | TPS 651.616 | ETA 00:00:17
Time 00:03:11 | Step 997201 / 1002000 | TPS 651.213 | ETA 00:00:07
Time 00:03:18 | Step 1002000 / 1002000 | TPS 680.864 | ETA 00:00:00
Average TPS: 503.591
---------
-- Neighborlist stats:
9578 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 1
** run complete **
