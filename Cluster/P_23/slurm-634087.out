[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 253610 / 270000 | TPS 360.994 | ETA 00:00:45
Time 00:00:20 | Step 260101 / 270000 | TPS 642.708 | ETA 00:00:15
Time 00:00:30 | Step 266701 / 270000 | TPS 650.694 | ETA 00:00:05
Time 00:00:35 | Step 270000 / 270000 | TPS 693.931 | ETA 00:00:00
Average TPS: 571.481
---------
-- Neighborlist stats:
747 normal updates / 67 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 1
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 274201 / 289000 | TPS 504.418 | ETA 00:00:29
Time 00:00:20 | Step 281101 / 289000 | TPS 674.438 | ETA 00:00:11
Time 00:00:30 | Step 286801 / 289000 | TPS 566.097 | ETA 00:00:03
Time 00:00:33 | Step 289000 / 289000 | TPS 680.923 | ETA 00:00:00
Average TPS: 591.015
---------
-- Neighborlist stats:
0 normal updates / 68 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 293101 / 308000 | TPS 496.926 | ETA 00:00:29
Time 00:00:20 | Step 300001 / 308000 | TPS 674.287 | ETA 00:00:11
Time 00:00:30 | Step 305701 / 308000 | TPS 565.851 | ETA 00:00:04
Time 00:00:33 | Step 308000 / 308000 | TPS 703.088 | ETA 00:00:00
Average TPS: 590.993
---------
-- Neighborlist stats:
0 normal updates / 68 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 312209 / 327000 | TPS 520.891 | ETA 00:00:28
Time 00:00:20 | Step 318901 / 327000 | TPS 659.839 | ETA 00:00:12
Time 00:00:30 | Step 324601 / 327000 | TPS 565.538 | ETA 00:00:04
Time 00:00:33 | Step 327000 / 327000 | TPS 724.078 | ETA 00:00:00
Average TPS: 596.407
---------
-- Neighborlist stats:
0 normal updates / 67 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 331201 / 346000 | TPS 504.804 | ETA 00:00:29
Time 00:00:20 | Step 338101 / 346000 | TPS 674.414 | ETA 00:00:11
Time 00:00:30 | Step 343801 / 346000 | TPS 565.982 | ETA 00:00:03
Time 00:00:33 | Step 346000 / 346000 | TPS 680.799 | ETA 00:00:00
Average TPS: 591.101
---------
-- Neighborlist stats:
0 normal updates / 68 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 350101 / 365000 | TPS 496.555 | ETA 00:00:30
Time 00:00:20 | Step 357001 / 365000 | TPS 674.07 | ETA 00:00:11
Time 00:00:30 | Step 362701 / 365000 | TPS 565.733 | ETA 00:00:04
Time 00:00:33 | Step 365000 / 365000 | TPS 702.596 | ETA 00:00:00
Average TPS: 590.725
---------
-- Neighborlist stats:
0 normal updates / 68 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 369230 / 384000 | TPS 522.999 | ETA 00:00:28
Time 00:00:20 | Step 375901 / 384000 | TPS 658.589 | ETA 00:00:12
Time 00:00:30 | Step 381601 / 384000 | TPS 566.135 | ETA 00:00:04
Time 00:00:33 | Step 384000 / 384000 | TPS 725.001 | ETA 00:00:00
Average TPS: 596.899
---------
-- Neighborlist stats:
0 normal updates / 67 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 388201 / 403000 | TPS 504.404 | ETA 00:00:29
Time 00:00:20 | Step 395101 / 403000 | TPS 674.216 | ETA 00:00:11
Time 00:00:30 | Step 400801 / 403000 | TPS 565.51 | ETA 00:00:03
Time 00:00:33 | Step 403000 / 403000 | TPS 680.546 | ETA 00:00:00
Average TPS: 590.738
---------
-- Neighborlist stats:
0 normal updates / 68 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 407101 / 422000 | TPS 496.245 | ETA 00:00:30
Time 00:00:20 | Step 414001 / 422000 | TPS 673.559 | ETA 00:00:11
Time 00:00:30 | Step 419701 / 422000 | TPS 565.209 | ETA 00:00:04
Time 00:00:33 | Step 422000 / 422000 | TPS 702.404 | ETA 00:00:00
Average TPS: 590.299
---------
-- Neighborlist stats:
0 normal updates / 68 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 426212 / 441000 | TPS 521.19 | ETA 00:00:28
Time 00:00:20 | Step 432901 / 441000 | TPS 659.843 | ETA 00:00:12
Time 00:00:30 | Step 438601 / 441000 | TPS 566.08 | ETA 00:00:04
Time 00:00:33 | Step 441000 / 441000 | TPS 724.511 | ETA 00:00:00
Average TPS: 596.695
---------
-- Neighborlist stats:
0 normal updates / 67 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
ramps_P23.py:015  |      system = init.read_gsd(ramp_file, frame = -1)
notice(2): Group "all" created containing 1010 particles
ramps_P23.py:016  |      rigid = md.constrain.rigid()
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
ramps_P23.py:023  |      nl = md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
ramps_P23.py:024  |      lj = md.pair.lj(r_cut = 3.5, nlist = nl)
ramps_P23.py:025  |      lj.set_params(mode = 'shift')
ramps_P23.py:027  |      lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0)
ramps_P23.py:028  |      lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:029  |      lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:030  |      lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0)
ramps_P23.py:031  |      lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:032  |      lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0)
ramps_P23.py:033  |      md.integrate.mode_standard(dt = 0.005)
ramps_P23.py:037  |      nanoparticles = group.type(name = 'Nano_Particles', type = 'NP')
notice(2): Group "Nano_Particles" created containing 10 particles
ramps_P23.py:038  |      mesogens = group.rigid_center()
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1010 particles
ramps_P23.py:045  |      npt = md.integrate.npt(group = groupNP_mes, kT = temp, tau = 2.0, tauP = 2.0, P = p_max)
ramps_P23.py:054  |      log = analyze.log(filename = log_file, quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'], period = 1e3, overwrite = True)
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:065  |      gsd = dump.gsd(gsd_file, period = 1e3, group = group.all(), overwrite = True); 
ramps_P23.py:066  |      meso_gsd = dump.gsd(meso_gsd_file, period = 1e3, group = groupNP_mes, overwrite = True); 
ramps_P23.py:067  |      run(steps_ramp)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9010
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 445201 / 460000 | TPS 504.549 | ETA 00:00:29
Time 00:00:20 | Step 452101 / 460000 | TPS 673.882 | ETA 00:00:11
Time 00:00:30 | Step 457801 / 460000 | TPS 565.552 | ETA 00:00:03
Time 00:00:33 | Step 460000 / 460000 | TPS 680.191 | ETA 00:00:00
Average TPS: 590.685
---------
-- Neighborlist stats:
0 normal updates / 68 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 100
** run complete **
