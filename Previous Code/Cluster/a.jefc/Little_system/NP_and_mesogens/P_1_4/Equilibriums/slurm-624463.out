[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_65.py:046  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_65.py:050  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_65.py:062  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_65.py:064  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_65.py:065  |  lj.set_params(mode='shift')
Equilibrium_65.py:069  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_65.py:070  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_65.py:071  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_65.py:072  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_65.py:073  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_65.py:074  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_65.py:078  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_65.py:082  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_65.py:083  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_65.py:088  |  npt = hoomd.md.integrate.npt(group = groupNP_mes, kT = temp, tau = 17.0, tauP = 17.0, P = pressure);
Equilibrium_65.py:095  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_65.py:111  |                 group = hoomd.group.all(),
Equilibrium_65.py:109  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_65.py:113  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_65.py:124  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 806604 / 904000 | TPS 260.336 | ETA 00:06:14
Time 00:00:20 | Step 809336 / 904000 | TPS 273.017 | ETA 00:05:46
Time 00:00:30 | Step 812062 / 904000 | TPS 272.583 | ETA 00:05:37
Time 00:00:40 | Step 814775 / 904000 | TPS 271.152 | ETA 00:05:29
Time 00:00:50 | Step 817457 / 904000 | TPS 268.129 | ETA 00:05:22
Time 00:01:00 | Step 820208 / 904000 | TPS 275.092 | ETA 00:05:04
Time 00:01:10 | Step 823081 / 904000 | TPS 287.2 | ETA 00:04:41
Time 00:01:20 | Step 825946 / 904000 | TPS 286.415 | ETA 00:04:32
Time 00:01:30 | Step 828723 / 904000 | TPS 277.587 | ETA 00:04:31
Time 00:01:40 | Step 831554 / 904000 | TPS 282.995 | ETA 00:04:15
Time 00:01:50 | Step 834367 / 904000 | TPS 281.281 | ETA 00:04:07
Time 00:02:00 | Step 837186 / 904000 | TPS 281.834 | ETA 00:03:57
Time 00:02:10 | Step 839902 / 904000 | TPS 271.409 | ETA 00:03:56
Time 00:02:20 | Step 842626 / 904000 | TPS 272.323 | ETA 00:03:45
Time 00:02:30 | Step 845323 / 904000 | TPS 269.518 | ETA 00:03:37
Time 00:02:40 | Step 848027 / 904000 | TPS 270.384 | ETA 00:03:27
Time 00:02:50 | Step 850769 / 904000 | TPS 274.193 | ETA 00:03:14
Time 00:03:00 | Step 853576 / 904000 | TPS 280.576 | ETA 00:02:59
Time 00:03:10 | Step 856387 / 904000 | TPS 280.98 | ETA 00:02:49
Time 00:03:20 | Step 859219 / 904000 | TPS 283.186 | ETA 00:02:38
Time 00:03:30 | Step 862021 / 904000 | TPS 280.155 | ETA 00:02:29
Time 00:03:40 | Step 864815 / 904000 | TPS 279.251 | ETA 00:02:20
Time 00:03:50 | Step 867621 / 904000 | TPS 280.449 | ETA 00:02:09
Time 00:04:00 | Step 870385 / 904000 | TPS 276.346 | ETA 00:02:01
Time 00:04:10 | Step 873070 / 904000 | TPS 268.455 | ETA 00:01:55
Time 00:04:20 | Step 875769 / 904000 | TPS 269.852 | ETA 00:01:44
Time 00:04:30 | Step 878537 / 904000 | TPS 276.67 | ETA 00:01:32
Time 00:04:40 | Step 881315 / 904000 | TPS 277.655 | ETA 00:01:21
Time 00:04:50 | Step 884062 / 904000 | TPS 274.528 | ETA 00:01:12
Time 00:05:00 | Step 886865 / 904000 | TPS 280.232 | ETA 00:01:01
Time 00:05:10 | Step 889636 / 904000 | TPS 276.993 | ETA 00:00:51
Time 00:05:20 | Step 892446 / 904000 | TPS 280.985 | ETA 00:00:41
Time 00:05:30 | Step 895250 / 904000 | TPS 280.306 | ETA 00:00:31
Time 00:05:40 | Step 897983 / 904000 | TPS 273.248 | ETA 00:00:22
Time 00:05:50 | Step 900698 / 904000 | TPS 271.483 | ETA 00:00:12
Time 00:06:00 | Step 903446 / 904000 | TPS 274.78 | ETA 00:00:02
Time 00:06:02 | Step 904000 / 904000 | TPS 273.693 | ETA 00:00:00
Average TPS: 276.141
---------
-- Neighborlist stats:
43180 normal updates / 335 forced updates / 0 dangerous updates
n_neigh_min: 32 / n_neigh_max: 139 / n_neigh_avg: 105.015
shortest rebuild period: 1
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0m**ERROR**: nlist.tree(): Particle 876 is out of bounds (x: -7.13907, y: -92.9503, z: -62.1946, fx: 0.281763, fy: -2.34143, fz:-1.40125)
HOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_67.py:046  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_67.py:050  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_67.py:062  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_67.py:064  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_67.py:065  |  lj.set_params(mode='shift')
Equilibrium_67.py:069  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_67.py:070  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_67.py:071  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_67.py:072  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_67.py:073  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_67.py:074  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_67.py:078  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_67.py:082  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_67.py:083  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_67.py:088  |  npt = hoomd.md.integrate.npt(group = groupNP_mes, kT = temp, tau = 15.0, tauP = 15.0, P = pressure);
Equilibrium_67.py:095  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_67.py:111  |                 group = hoomd.group.all(),
Equilibrium_67.py:109  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_67.py:113  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_67.py:124  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 855586 / 953000 | TPS 258.489 | ETA 00:06:16
Time 00:00:20 | Step 858324 / 953000 | TPS 273.732 | ETA 00:05:45
Time 00:00:30 | Step 860982 / 953000 | TPS 265.682 | ETA 00:05:46
Traceback (most recent call last):
  File "Equilibrium_67.py", line 124, in <module>
    hoomd.run(steps)
  File "/usr/local/lib/python3.5/dist-packages/hoomd/__init__.py", line 194, in run
    context.current.system.run(int(tsteps), callback_period, callback, limit_hours, int(limit_multiple));
RuntimeError: Error updating neighborlist
