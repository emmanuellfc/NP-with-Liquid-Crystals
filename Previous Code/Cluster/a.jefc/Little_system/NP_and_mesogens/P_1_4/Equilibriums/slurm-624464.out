[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_67.py:046  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_67.py:050  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_67.py:062  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_67.py:064  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_67.py:065  |  lj.set_params(mode='shift')
Equilibrium_67.py:069  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_67.py:070  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_67.py:071  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_67.py:072  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_67.py:073  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_67.py:074  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_67.py:078  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_67.py:082  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_67.py:083  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_67.py:088  |  npt = hoomd.md.integrate.npt(group = groupNP_mes, kT = temp, tau = 17.0, tauP = 17.0, P = pressure);
Equilibrium_67.py:095  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_67.py:111  |                 group = hoomd.group.all(),
Equilibrium_67.py:109  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_67.py:113  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_67.py:124  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 855582 / 953000 | TPS 258.198 | ETA 00:06:17
Time 00:00:20 | Step 858327 / 953000 | TPS 274.406 | ETA 00:05:45
Time 00:00:30 | Step 860976 / 953000 | TPS 264.777 | ETA 00:05:47
Time 00:00:40 | Step 863672 / 953000 | TPS 269.487 | ETA 00:05:31
Time 00:00:50 | Step 866373 / 953000 | TPS 270.023 | ETA 00:05:20
Time 00:01:00 | Step 869123 / 953000 | TPS 274.86 | ETA 00:05:05
Time 00:01:10 | Step 871910 / 953000 | TPS 278.646 | ETA 00:04:51
Time 00:01:20 | Step 874843 / 953000 | TPS 293.263 | ETA 00:04:26
Time 00:01:30 | Step 877696 / 953000 | TPS 285.255 | ETA 00:04:23
Time 00:01:40 | Step 880466 / 953000 | TPS 276.968 | ETA 00:04:21
Time 00:01:50 | Step 883182 / 953000 | TPS 271.458 | ETA 00:04:17
Time 00:02:00 | Step 885875 / 953000 | TPS 269.192 | ETA 00:04:09
Time 00:02:10 | Step 888566 / 953000 | TPS 268.915 | ETA 00:03:59
Time 00:02:20 | Step 891231 / 953000 | TPS 266.369 | ETA 00:03:51
Time 00:02:30 | Step 893954 / 953000 | TPS 272.286 | ETA 00:03:36
Time 00:02:40 | Step 896740 / 953000 | TPS 278.496 | ETA 00:03:22
Time 00:02:50 | Step 899553 / 953000 | TPS 281.172 | ETA 00:03:10
Time 00:03:00 | Step 902398 / 953000 | TPS 284.499 | ETA 00:02:57
Time 00:03:10 | Step 905268 / 953000 | TPS 286.842 | ETA 00:02:46
Time 00:03:20 | Step 908014 / 953000 | TPS 274.512 | ETA 00:02:43
Time 00:03:30 | Step 910745 / 953000 | TPS 272.917 | ETA 00:02:34
Time 00:03:40 | Step 913503 / 953000 | TPS 275.653 | ETA 00:02:23
Time 00:03:50 | Step 916172 / 953000 | TPS 266.833 | ETA 00:02:18
Time 00:04:00 | Step 918879 / 953000 | TPS 270.504 | ETA 00:02:06
Time 00:04:10 | Step 921538 / 953000 | TPS 265.791 | ETA 00:01:58
Time 00:04:20 | Step 924344 / 953000 | TPS 280.54 | ETA 00:01:42
Time 00:04:30 | Step 927147 / 953000 | TPS 280.112 | ETA 00:01:32
Time 00:04:40 | Step 929970 / 953000 | TPS 282.125 | ETA 00:01:21
Time 00:04:50 | Step 932800 / 953000 | TPS 282.865 | ETA 00:01:11
Time 00:05:00 | Step 935598 / 953000 | TPS 279.748 | ETA 00:01:02
Time 00:05:10 | Step 938346 / 953000 | TPS 274.727 | ETA 00:00:53
Time 00:05:20 | Step 941039 / 953000 | TPS 269.294 | ETA 00:00:44
Time 00:05:30 | Step 943699 / 953000 | TPS 265.889 | ETA 00:00:34
Time 00:05:40 | Step 946412 / 953000 | TPS 271.198 | ETA 00:00:24
Time 00:05:50 | Step 949109 / 953000 | TPS 269.59 | ETA 00:00:14
Time 00:06:00 | Step 951816 / 953000 | TPS 270.641 | ETA 00:00:04
Time 00:06:04 | Step 953000 / 953000 | TPS 282.24 | ETA 00:00:00
Average TPS: 274.481
---------
-- Neighborlist stats:
44599 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 35 / n_neigh_max: 134 / n_neigh_avg: 105.448
shortest rebuild period: 1
** run complete **
