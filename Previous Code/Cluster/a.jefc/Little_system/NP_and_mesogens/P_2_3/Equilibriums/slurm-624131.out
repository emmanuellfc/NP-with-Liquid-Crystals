[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_52.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_52.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_52.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_52.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_52.py:064  |  lj.set_params(mode='shift')
Equilibrium_52.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_52.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_52.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_52.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_52.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_52.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_52.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_52.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_52.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_52.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 10.0, tauP = 10.0, P = pressure);
Equilibrium_52.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_52.py:110  |                 group = hoomd.group.all(),
Equilibrium_52.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_52.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_52.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 659212 / 757000 | TPS 221.137 | ETA 00:07:22
Time 00:00:20 | Step 661685 / 757000 | TPS 247.064 | ETA 00:06:25
Time 00:00:30 | Step 664151 / 757000 | TPS 246.59 | ETA 00:06:16
Time 00:00:40 | Step 666616 / 757000 | TPS 246.452 | ETA 00:06:06
Time 00:00:50 | Step 669080 / 757000 | TPS 246.397 | ETA 00:05:56
Time 00:01:00 | Step 671572 / 757000 | TPS 249.087 | ETA 00:05:42
Time 00:01:10 | Step 674039 / 757000 | TPS 246.481 | ETA 00:05:36
Time 00:01:20 | Step 676513 / 757000 | TPS 247.331 | ETA 00:05:25
Time 00:01:30 | Step 678993 / 757000 | TPS 247.766 | ETA 00:05:14
Time 00:01:40 | Step 681446 / 757000 | TPS 245.258 | ETA 00:05:08
Time 00:01:50 | Step 683884 / 757000 | TPS 243.582 | ETA 00:05:00
Time 00:02:00 | Step 686328 / 757000 | TPS 244.397 | ETA 00:04:49
Time 00:02:10 | Step 688786 / 757000 | TPS 245.685 | ETA 00:04:37
Time 00:02:20 | Step 691258 / 757000 | TPS 247.178 | ETA 00:04:25
Time 00:02:30 | Step 693739 / 757000 | TPS 247.945 | ETA 00:04:15
Time 00:02:40 | Step 696203 / 757000 | TPS 246.315 | ETA 00:04:06
Time 00:02:50 | Step 698667 / 757000 | TPS 246.366 | ETA 00:03:56
Time 00:03:00 | Step 701115 / 757000 | TPS 244.67 | ETA 00:03:48
Time 00:03:10 | Step 703535 / 757000 | TPS 241.983 | ETA 00:03:40
Time 00:03:20 | Step 705963 / 757000 | TPS 242.707 | ETA 00:03:30
Time 00:03:30 | Step 708401 / 757000 | TPS 243.751 | ETA 00:03:19
Time 00:03:40 | Step 710897 / 757000 | TPS 249.581 | ETA 00:03:04
Time 00:03:50 | Step 713355 / 757000 | TPS 245.599 | ETA 00:02:57
Time 00:04:00 | Step 715791 / 757000 | TPS 243.588 | ETA 00:02:49
Time 00:04:10 | Step 718233 / 757000 | TPS 244.009 | ETA 00:02:38
Time 00:04:20 | Step 720705 / 757000 | TPS 247.135 | ETA 00:02:26
Time 00:04:30 | Step 723186 / 757000 | TPS 247.966 | ETA 00:02:16
Time 00:04:40 | Step 725679 / 757000 | TPS 249.29 | ETA 00:02:05
Time 00:04:50 | Step 728119 / 757000 | TPS 243.95 | ETA 00:01:58
Time 00:05:00 | Step 730592 / 757000 | TPS 247.075 | ETA 00:01:46
Time 00:05:10 | Step 733061 / 757000 | TPS 246.816 | ETA 00:01:36
Time 00:05:20 | Step 735517 / 757000 | TPS 245.498 | ETA 00:01:27
Time 00:05:30 | Step 737983 / 757000 | TPS 246.465 | ETA 00:01:17
Time 00:05:40 | Step 740416 / 757000 | TPS 243.127 | ETA 00:01:08
Time 00:05:50 | Step 742865 / 757000 | TPS 244.704 | ETA 00:00:57
Time 00:06:00 | Step 745346 / 757000 | TPS 247.845 | ETA 00:00:47
Time 00:06:10 | Step 747796 / 757000 | TPS 244.873 | ETA 00:00:37
Time 00:06:20 | Step 750285 / 757000 | TPS 248.786 | ETA 00:00:26
Time 00:06:30 | Step 752802 / 757000 | TPS 251.656 | ETA 00:00:16
Time 00:06:40 | Step 755267 / 757000 | TPS 246.5 | ETA 00:00:07
Time 00:06:47 | Step 757000 / 757000 | TPS 247.529 | ETA 00:00:00
Average TPS: 245.599
---------
-- Neighborlist stats:
35014 normal updates / 335 forced updates / 0 dangerous updates
n_neigh_min: 59 / n_neigh_max: 238 / n_neigh_avg: 199.56
shortest rebuild period: 2
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_54.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_54.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_54.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_54.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_54.py:064  |  lj.set_params(mode='shift')
Equilibrium_54.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_54.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_54.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_54.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_54.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_54.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_54.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_54.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_54.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_54.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 10.0, tauP = 10.0, P = pressure);
Equilibrium_54.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_54.py:110  |                 group = hoomd.group.all(),
Equilibrium_54.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_54.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_54.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 708141 / 806000 | TPS 214.007 | ETA 00:07:37
Time 00:00:20 | Step 710546 / 806000 | TPS 240.391 | ETA 00:06:37
Time 00:00:30 | Step 712936 / 806000 | TPS 238.899 | ETA 00:06:29
Time 00:00:40 | Step 715341 / 806000 | TPS 240.482 | ETA 00:06:16
Time 00:00:50 | Step 717721 / 806000 | TPS 237.841 | ETA 00:06:11
Time 00:01:00 | Step 720102 / 806000 | TPS 238.084 | ETA 00:06:00
Time 00:01:10 | Step 722492 / 806000 | TPS 238.963 | ETA 00:05:49
Time 00:01:20 | Step 724917 / 806000 | TPS 242.493 | ETA 00:05:34
Time 00:01:30 | Step 727277 / 806000 | TPS 235.789 | ETA 00:05:33
Time 00:01:40 | Step 729631 / 806000 | TPS 235.373 | ETA 00:05:24
Time 00:01:50 | Step 732021 / 806000 | TPS 238.769 | ETA 00:05:09
Time 00:02:00 | Step 734365 / 806000 | TPS 234.3 | ETA 00:05:05
Time 00:02:10 | Step 736762 / 806000 | TPS 239.525 | ETA 00:04:49
Time 00:02:20 | Step 739180 / 806000 | TPS 241.671 | ETA 00:04:36
Time 00:02:30 | Step 741588 / 806000 | TPS 240.612 | ETA 00:04:27
Time 00:02:40 | Step 743968 / 806000 | TPS 237.884 | ETA 00:04:20
Time 00:02:50 | Step 746337 / 806000 | TPS 236.886 | ETA 00:04:11
Time 00:03:00 | Step 748715 / 806000 | TPS 237.661 | ETA 00:04:01
Time 00:03:10 | Step 751120 / 806000 | TPS 240.455 | ETA 00:03:48
Time 00:03:20 | Step 753490 / 806000 | TPS 236.957 | ETA 00:03:41
Time 00:03:30 | Step 755896 / 806000 | TPS 240.491 | ETA 00:03:28
Time 00:03:40 | Step 758318 / 806000 | TPS 242.124 | ETA 00:03:16
Time 00:03:50 | Step 760709 / 806000 | TPS 239.048 | ETA 00:03:09
Time 00:04:00 | Step 763054 / 806000 | TPS 234.484 | ETA 00:03:03
Time 00:04:10 | Step 765348 / 806000 | TPS 229.399 | ETA 00:02:57
Time 00:04:20 | Step 767701 / 806000 | TPS 235.052 | ETA 00:02:42
Time 00:04:30 | Step 770071 / 806000 | TPS 236.821 | ETA 00:02:31
Time 00:04:40 | Step 772393 / 806000 | TPS 232.18 | ETA 00:02:24
Time 00:04:50 | Step 774696 / 806000 | TPS 230.173 | ETA 00:02:16
Time 00:05:00 | Step 777021 / 806000 | TPS 232.318 | ETA 00:02:04
Time 00:05:10 | Step 779347 / 806000 | TPS 232.536 | ETA 00:01:54
Time 00:05:20 | Step 781699 / 806000 | TPS 234.986 | ETA 00:01:43
Time 00:05:30 | Step 784053 / 806000 | TPS 235.156 | ETA 00:01:33
Time 00:05:40 | Step 786405 / 806000 | TPS 234.95 | ETA 00:01:23
Time 00:05:50 | Step 788704 / 806000 | TPS 229.765 | ETA 00:01:15
Time 00:06:00 | Step 790994 / 806000 | TPS 228.764 | ETA 00:01:05
Time 00:06:10 | Step 793328 / 806000 | TPS 233.231 | ETA 00:00:54
Time 00:06:20 | Step 795698 / 806000 | TPS 236.787 | ETA 00:00:43
Time 00:06:30 | Step 798038 / 806000 | TPS 233.772 | ETA 00:00:34
Time 00:06:40 | Step 800401 / 806000 | TPS 236.027 | ETA 00:00:23
Time 00:06:50 | Step 802759 / 806000 | TPS 235.673 | ETA 00:00:13
Time 00:07:00 | Step 805034 / 806000 | TPS 227.486 | ETA 00:00:04
Time 00:07:04 | Step 806000 / 806000 | TPS 233.806 | ETA 00:00:00
Average TPS: 235.655
---------
-- Neighborlist stats:
35787 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 51 / n_neigh_max: 234 / n_neigh_avg: 195.864
shortest rebuild period: 2
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_56.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_56.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_56.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_56.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_56.py:064  |  lj.set_params(mode='shift')
Equilibrium_56.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_56.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_56.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_56.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_56.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_56.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_56.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_56.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_56.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_56.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 10.0, tauP = 10.0, P = pressure);
Equilibrium_56.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_56.py:110  |                 group = hoomd.group.all(),
Equilibrium_56.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_56.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_56.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 757109 / 855000 | TPS 210.689 | ETA 00:07:44
Time 00:00:20 | Step 759395 / 855000 | TPS 228.591 | ETA 00:06:58
Time 00:00:30 | Step 761715 / 855000 | TPS 231.895 | ETA 00:06:42
Time 00:00:40 | Step 764080 / 855000 | TPS 236.286 | ETA 00:06:24
Time 00:00:50 | Step 766453 / 855000 | TPS 237.097 | ETA 00:06:13
Time 00:01:00 | Step 768819 / 855000 | TPS 236.507 | ETA 00:06:04
Time 00:01:10 | Step 771164 / 855000 | TPS 234.485 | ETA 00:05:57
Time 00:01:20 | Step 773548 / 855000 | TPS 238.244 | ETA 00:05:41
Time 00:01:30 | Step 775897 / 855000 | TPS 234.879 | ETA 00:05:36
Time 00:01:40 | Step 778237 / 855000 | TPS 233.997 | ETA 00:05:28
Time 00:01:50 | Step 780484 / 855000 | TPS 224.639 | ETA 00:05:31
Time 00:02:00 | Step 782786 / 855000 | TPS 230.15 | ETA 00:05:13
Time 00:02:10 | Step 785130 / 855000 | TPS 234.209 | ETA 00:04:58
Time 00:02:20 | Step 787465 / 855000 | TPS 233.322 | ETA 00:04:49
Time 00:02:30 | Step 789776 / 855000 | TPS 231.027 | ETA 00:04:42
Time 00:02:40 | Step 792155 / 855000 | TPS 237.669 | ETA 00:04:24
Time 00:02:50 | Step 794569 / 855000 | TPS 241.326 | ETA 00:04:10
Time 00:03:00 | Step 796847 / 855000 | TPS 227.786 | ETA 00:04:15
Time 00:03:10 | Step 799137 / 855000 | TPS 228.905 | ETA 00:04:04
Time 00:03:20 | Step 801508 / 855000 | TPS 237.013 | ETA 00:03:45
Time 00:03:30 | Step 803856 / 855000 | TPS 234.599 | ETA 00:03:38
Time 00:03:40 | Step 806130 / 855000 | TPS 227.208 | ETA 00:03:35
Time 00:03:50 | Step 808387 / 855000 | TPS 225.534 | ETA 00:03:26
Time 00:04:00 | Step 810749 / 855000 | TPS 236.164 | ETA 00:03:07
Time 00:04:10 | Step 813122 / 855000 | TPS 237.207 | ETA 00:02:56
Time 00:04:20 | Step 815490 / 855000 | TPS 236.71 | ETA 00:02:46
Time 00:04:30 | Step 817815 / 855000 | TPS 232.388 | ETA 00:02:40
Time 00:04:40 | Step 820144 / 855000 | TPS 232.824 | ETA 00:02:29
Time 00:04:50 | Step 822408 / 855000 | TPS 226.191 | ETA 00:02:24
Time 00:05:00 | Step 824806 / 855000 | TPS 239.632 | ETA 00:02:06
Time 00:05:10 | Step 827202 / 855000 | TPS 239.425 | ETA 00:01:56
Time 00:05:20 | Step 829574 / 855000 | TPS 236.992 | ETA 00:01:47
Time 00:05:30 | Step 831966 / 855000 | TPS 239.159 | ETA 00:01:36
Time 00:05:40 | Step 834374 / 855000 | TPS 240.788 | ETA 00:01:25
Time 00:05:50 | Step 836726 / 855000 | TPS 235.177 | ETA 00:01:17
Time 00:06:00 | Step 839117 / 855000 | TPS 239.012 | ETA 00:01:06
Time 00:06:10 | Step 841484 / 855000 | TPS 236.655 | ETA 00:00:57
Time 00:06:20 | Step 843872 / 855000 | TPS 238.703 | ETA 00:00:46
Time 00:06:30 | Step 846237 / 855000 | TPS 236.469 | ETA 00:00:37
Time 00:06:40 | Step 848586 / 855000 | TPS 234.795 | ETA 00:00:27
Time 00:06:50 | Step 851003 / 855000 | TPS 241.47 | ETA 00:00:16
Time 00:07:00 | Step 853333 / 855000 | TPS 232.921 | ETA 00:00:07
Time 00:07:07 | Step 855000 / 855000 | TPS 232.187 | ETA 00:00:00
Average TPS: 233.987
---------
-- Neighborlist stats:
36767 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 56 / n_neigh_max: 237 / n_neigh_avg: 190.487
shortest rebuild period: 2
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_58.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_58.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_58.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_58.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_58.py:064  |  lj.set_params(mode='shift')
Equilibrium_58.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_58.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_58.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_58.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_58.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_58.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_58.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_58.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_58.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_58.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 10.0, tauP = 10.0, P = pressure);
Equilibrium_58.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_58.py:110  |                 group = hoomd.group.all(),
Equilibrium_58.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_58.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_58.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 806096 / 904000 | TPS 209.505 | ETA 00:07:47
Time 00:00:20 | Step 808414 / 904000 | TPS 231.676 | ETA 00:06:52
Time 00:00:30 | Step 810694 / 904000 | TPS 227.929 | ETA 00:06:49
Time 00:00:40 | Step 813009 / 904000 | TPS 231.415 | ETA 00:06:33
Time 00:00:50 | Step 815360 / 904000 | TPS 235.082 | ETA 00:06:17
Time 00:01:00 | Step 817682 / 904000 | TPS 232.129 | ETA 00:06:11
Time 00:01:10 | Step 819966 / 904000 | TPS 228.383 | ETA 00:06:07
Time 00:01:20 | Step 822284 / 904000 | TPS 231.738 | ETA 00:05:52
Time 00:01:30 | Step 824590 / 904000 | TPS 230.563 | ETA 00:05:44
Time 00:01:40 | Step 826919 / 904000 | TPS 232.742 | ETA 00:05:31
Time 00:01:50 | Step 829205 / 904000 | TPS 228.442 | ETA 00:05:27
Time 00:02:00 | Step 831495 / 904000 | TPS 228.921 | ETA 00:05:16
Time 00:02:10 | Step 833836 / 904000 | TPS 234.027 | ETA 00:04:59
Time 00:02:20 | Step 836151 / 904000 | TPS 231.467 | ETA 00:04:53
Time 00:02:30 | Step 838428 / 904000 | TPS 227.595 | ETA 00:04:48
Time 00:02:40 | Step 840753 / 904000 | TPS 232.484 | ETA 00:04:32
Time 00:02:50 | Step 843063 / 904000 | TPS 230.839 | ETA 00:04:23
Time 00:03:00 | Step 845373 / 904000 | TPS 230.802 | ETA 00:04:14
Time 00:03:10 | Step 847741 / 904000 | TPS 236.599 | ETA 00:03:57
Time 00:03:20 | Step 850081 / 904000 | TPS 233.972 | ETA 00:03:50
Time 00:03:30 | Step 852433 / 904000 | TPS 235.196 | ETA 00:03:39
Time 00:03:40 | Step 854783 / 904000 | TPS 234.95 | ETA 00:03:29
Time 00:03:50 | Step 857047 / 904000 | TPS 226.234 | ETA 00:03:27
Time 00:04:00 | Step 859370 / 904000 | TPS 232.162 | ETA 00:03:12
Time 00:04:10 | Step 861723 / 904000 | TPS 235.17 | ETA 00:02:59
Time 00:04:20 | Step 864052 / 904000 | TPS 232.775 | ETA 00:02:51
Time 00:04:30 | Step 866394 / 904000 | TPS 234.091 | ETA 00:02:40
Time 00:04:40 | Step 868724 / 904000 | TPS 232.999 | ETA 00:02:31
Time 00:04:50 | Step 871062 / 904000 | TPS 233.656 | ETA 00:02:20
Time 00:05:00 | Step 873416 / 904000 | TPS 235.249 | ETA 00:02:10
Time 00:05:10 | Step 875780 / 904000 | TPS 236.236 | ETA 00:01:59
Time 00:05:20 | Step 878103 / 904000 | TPS 232.294 | ETA 00:01:51
Time 00:05:30 | Step 880422 / 904000 | TPS 231.748 | ETA 00:01:41
Time 00:05:40 | Step 882732 / 904000 | TPS 230.974 | ETA 00:01:32
Time 00:05:50 | Step 885055 / 904000 | TPS 232.281 | ETA 00:01:21
Time 00:06:00 | Step 887387 / 904000 | TPS 233.129 | ETA 00:01:11
Time 00:06:10 | Step 889712 / 904000 | TPS 232.418 | ETA 00:01:01
Time 00:06:20 | Step 892032 / 904000 | TPS 231.949 | ETA 00:00:51
Time 00:06:30 | Step 894370 / 904000 | TPS 233.757 | ETA 00:00:41
Time 00:06:40 | Step 896661 / 904000 | TPS 228.978 | ETA 00:00:32
Time 00:06:50 | Step 898945 / 904000 | TPS 228.271 | ETA 00:00:22
Time 00:07:00 | Step 901278 / 904000 | TPS 233.274 | ETA 00:00:11
Time 00:07:10 | Step 903601 / 904000 | TPS 232.122 | ETA 00:00:01
Time 00:07:12 | Step 904000 / 904000 | TPS 226.124 | ETA 00:00:00
Average TPS: 231.518
---------
-- Neighborlist stats:
37888 normal updates / 335 forced updates / 0 dangerous updates
n_neigh_min: 47 / n_neigh_max: 227 / n_neigh_avg: 183.582
shortest rebuild period: 2
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_60.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_60.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_60.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_60.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_60.py:064  |  lj.set_params(mode='shift')
Equilibrium_60.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_60.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_60.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_60.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_60.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_60.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_60.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_60.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_60.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_60.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 10.0, tauP = 10.0, P = pressure);
Equilibrium_60.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_60.py:110  |                 group = hoomd.group.all(),
Equilibrium_60.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_60.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_60.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 855095 / 953000 | TPS 209.484 | ETA 00:07:47
Time 00:00:20 | Step 857445 / 953000 | TPS 234.963 | ETA 00:06:46
Time 00:00:30 | Step 859797 / 953000 | TPS 235.152 | ETA 00:06:36
Time 00:00:40 | Step 862125 / 953000 | TPS 232.792 | ETA 00:06:30
Time 00:00:50 | Step 864457 / 953000 | TPS 233.19 | ETA 00:06:19
Time 00:01:00 | Step 866810 / 953000 | TPS 235.294 | ETA 00:06:06
Time 00:01:10 | Step 869174 / 953000 | TPS 236.238 | ETA 00:05:54
Time 00:01:20 | Step 871516 / 953000 | TPS 234.036 | ETA 00:05:48
Time 00:01:30 | Step 873802 / 953000 | TPS 228.505 | ETA 00:05:46
Time 00:01:40 | Step 876138 / 953000 | TPS 233.49 | ETA 00:05:29
Time 00:01:50 | Step 878516 / 953000 | TPS 237.714 | ETA 00:05:13
Time 00:02:00 | Step 880852 / 953000 | TPS 233.401 | ETA 00:05:09
Time 00:02:10 | Step 883208 / 953000 | TPS 235.585 | ETA 00:04:56
Time 00:02:20 | Step 887447 / 953000 | TPS 423.881 | ETA 00:02:34
Time 00:02:30 | Step 894001 / 953000 | TPS 649.48 | ETA 00:01:30
Time 00:02:40 | Step 900601 / 953000 | TPS 652.884 | ETA 00:01:20
Time 00:02:50 | Step 907201 / 953000 | TPS 652.465 | ETA 00:01:10
Time 00:03:00 | Step 913801 / 953000 | TPS 652.821 | ETA 00:01:00
Time 00:03:10 | Step 920401 / 953000 | TPS 652.4 | ETA 00:00:49
Time 00:03:20 | Step 927001 / 953000 | TPS 652.406 | ETA 00:00:39
Time 00:03:31 | Step 933601 / 953000 | TPS 652.707 | ETA 00:00:29
Time 00:03:41 | Step 940201 / 953000 | TPS 652.33 | ETA 00:00:19
Time 00:03:51 | Step 946801 / 953000 | TPS 652.611 | ETA 00:00:09
Time 00:04:00 | Step 953000 / 953000 | TPS 667.283 | ETA 00:00:00
Average TPS: 416.09
---------
-- Neighborlist stats:
12323 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 1 / n_neigh_avg: 0.000222124
shortest rebuild period: 1
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0m**ERROR**: nlist.tree(): Particle 432 is out of bounds (x: 788.931, y: -293.56, z: 631.949, fx: 29.3588, fy: -10.2383, fz:23.6164)
HOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_62.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_62.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_62.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_62.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_62.py:064  |  lj.set_params(mode='shift')
Equilibrium_62.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_62.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_62.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_62.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_62.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_62.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_62.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_62.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_62.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_62.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 15.0, tauP = 15.0, P = pressure);
Equilibrium_62.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_62.py:110  |                 group = hoomd.group.all(),
Equilibrium_62.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_62.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_62.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 904166 / 1002000 | TPS 216.597 | ETA 00:07:31
Time 00:00:20 | Step 906499 / 1002000 | TPS 233.22 | ETA 00:06:49
Time 00:00:30 | Step 908841 / 1002000 | TPS 234.123 | ETA 00:06:37
Time 00:00:40 | Step 911122 / 1002000 | TPS 228.09 | ETA 00:06:38
Time 00:00:50 | Step 913459 / 1002000 | TPS 233.679 | ETA 00:06:18
Time 00:01:00 | Step 915765 / 1002000 | TPS 230.538 | ETA 00:06:14
Time 00:01:10 | Step 918153 / 1002000 | TPS 238.753 | ETA 00:05:51
Time 00:01:20 | Step 920444 / 1002000 | TPS 228.899 | ETA 00:05:56
Time 00:01:30 | Step 922813 / 1002000 | TPS 236.799 | ETA 00:05:34
Time 00:01:40 | Step 925163 / 1002000 | TPS 234.908 | ETA 00:05:27
Time 00:01:50 | Step 927539 / 1002000 | TPS 237.567 | ETA 00:05:13
Time 00:02:00 | Step 929919 / 1002000 | TPS 238 | ETA 00:05:02
Time 00:02:10 | Step 932274 / 1002000 | TPS 235.458 | ETA 00:04:56
Time 00:02:20 | Step 934582 / 1002000 | TPS 230.788 | ETA 00:04:52
Time 00:02:30 | Step 936865 / 1002000 | TPS 228.25 | ETA 00:04:45
Time 00:02:40 | Step 939150 / 1002000 | TPS 228.344 | ETA 00:04:35
Time 00:02:50 | Step 941462 / 1002000 | TPS 231.173 | ETA 00:04:21
Time 00:03:00 | Step 943836 / 1002000 | TPS 237.379 | ETA 00:04:05
Time 00:03:10 | Step 946166 / 1002000 | TPS 232.816 | ETA 00:03:59
Time 00:03:20 | Step 948516 / 1002000 | TPS 234.8 | ETA 00:03:47
Time 00:03:30 | Step 950901 / 1002000 | TPS 238.349 | ETA 00:03:34
Time 00:03:40 | Step 953278 / 1002000 | TPS 237.654 | ETA 00:03:25
Time 00:03:50 | Step 955646 / 1002000 | TPS 236.714 | ETA 00:03:15
Time 00:04:00 | Step 957997 / 1002000 | TPS 235.068 | ETA 00:03:07
Time 00:04:10 | Step 960298 / 1002000 | TPS 229.983 | ETA 00:03:01
Time 00:04:20 | Step 962582 / 1002000 | TPS 228.387 | ETA 00:02:52
Time 00:04:30 | Step 964937 / 1002000 | TPS 235.49 | ETA 00:02:37
Time 00:04:40 | Step 967275 / 1002000 | TPS 233.786 | ETA 00:02:28
Time 00:04:50 | Step 969601 / 1002000 | TPS 232.554 | ETA 00:02:19
Time 00:05:00 | Step 971916 / 1002000 | TPS 231.491 | ETA 00:02:09
Time 00:05:10 | Step 974236 / 1002000 | TPS 231.973 | ETA 00:01:59
Time 00:05:20 | Step 976567 / 1002000 | TPS 232.941 | ETA 00:01:49
Time 00:05:30 | Step 978908 / 1002000 | TPS 233.983 | ETA 00:01:38
Time 00:05:40 | Step 981293 / 1002000 | TPS 238.461 | ETA 00:01:26
Time 00:05:50 | Step 983676 / 1002000 | TPS 238.146 | ETA 00:01:16
Time 00:06:00 | Step 986064 / 1002000 | TPS 238.697 | ETA 00:01:06
Time 00:06:10 | Step 988395 / 1002000 | TPS 233.066 | ETA 00:00:58
Time 00:06:20 | Step 990689 / 1002000 | TPS 229.233 | ETA 00:00:49
Time 00:06:30 | Step 992993 / 1002000 | TPS 230.271 | ETA 00:00:39
Time 00:06:40 | Step 995282 / 1002000 | TPS 228.77 | ETA 00:00:29
Time 00:06:50 | Step 997594 / 1002000 | TPS 231.089 | ETA 00:00:19
Time 00:07:00 | Step 999960 / 1002000 | TPS 236.392 | ETA 00:00:08
Traceback (most recent call last):
  File "Equilibrium_62.py", line 123, in <module>
    hoomd.run(steps)
  File "/usr/local/lib/python3.5/dist-packages/hoomd/__init__.py", line 194, in run
    context.current.system.run(int(tsteps), callback_period, callback, limit_hours, int(limit_multiple));
RuntimeError: Error updating neighborlist
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_64.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_64.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_64.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_64.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_64.py:064  |  lj.set_params(mode='shift')
Equilibrium_64.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_64.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_64.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_64.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_64.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_64.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_64.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_64.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_64.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_64.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 15.0, tauP = 15.0, P = pressure);
Equilibrium_64.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_64.py:110  |                 group = hoomd.group.all(),
Equilibrium_64.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_64.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_64.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 953079 / 1051000 | TPS 207.887 | ETA 00:07:51
Time 00:00:20 | Step 955290 / 1051000 | TPS 220.914 | ETA 00:07:13
Time 00:00:30 | Step 957452 / 1051000 | TPS 216.052 | ETA 00:07:12
Time 00:00:40 | Step 959704 / 1051000 | TPS 225.163 | ETA 00:06:45
Time 00:00:50 | Step 961904 / 1051000 | TPS 219.99 | ETA 00:06:44
Time 00:01:00 | Step 964078 / 1051000 | TPS 217.231 | ETA 00:06:40
Time 00:01:10 | Step 966275 / 1051000 | TPS 219.512 | ETA 00:06:25
Time 00:01:20 | Step 968521 / 1051000 | TPS 224.543 | ETA 00:06:07
Time 00:01:30 | Step 970754 / 1051000 | TPS 223.168 | ETA 00:05:59
Time 00:01:40 | Step 973047 / 1051000 | TPS 229.264 | ETA 00:05:40
Time 00:01:50 | Step 975288 / 1051000 | TPS 223.973 | ETA 00:05:38
Time 00:02:00 | Step 977531 / 1051000 | TPS 224.12 | ETA 00:05:27
Time 00:02:10 | Step 979790 / 1051000 | TPS 225.8 | ETA 00:05:15
Time 00:02:20 | Step 982049 / 1051000 | TPS 225.761 | ETA 00:05:05
Time 00:02:30 | Step 984289 / 1051000 | TPS 223.944 | ETA 00:04:57
Time 00:02:40 | Step 986518 / 1051000 | TPS 222.852 | ETA 00:04:49
Time 00:02:50 | Step 988760 / 1051000 | TPS 224.018 | ETA 00:04:37
Time 00:03:00 | Step 991018 / 1051000 | TPS 225.647 | ETA 00:04:25
Time 00:03:10 | Step 993265 / 1051000 | TPS 224.625 | ETA 00:04:17
Time 00:03:20 | Step 995533 / 1051000 | TPS 226.765 | ETA 00:04:04
Time 00:03:30 | Step 997795 / 1051000 | TPS 225.996 | ETA 00:03:55
Time 00:03:40 | Step 999984 / 1051000 | TPS 218.888 | ETA 00:03:53
Time 00:03:50 | Step 1002261 / 1051000 | TPS 227.651 | ETA 00:03:34
Time 00:04:00 | Step 1004560 / 1051000 | TPS 229.71 | ETA 00:03:22
Time 00:04:10 | Step 1006847 / 1051000 | TPS 228.602 | ETA 00:03:13
Time 00:04:20 | Step 1009124 / 1051000 | TPS 227.515 | ETA 00:03:04
Time 00:04:30 | Step 1011345 / 1051000 | TPS 222.046 | ETA 00:02:58
Time 00:04:40 | Step 1013566 / 1051000 | TPS 222.061 | ETA 00:02:48
Time 00:04:50 | Step 1015813 / 1051000 | TPS 224.505 | ETA 00:02:36
Time 00:05:00 | Step 1018054 / 1051000 | TPS 223.959 | ETA 00:02:27
Time 00:05:10 | Step 1020301 / 1051000 | TPS 224.65 | ETA 00:02:16
Time 00:05:20 | Step 1022534 / 1051000 | TPS 223.197 | ETA 00:02:07
Time 00:05:30 | Step 1024751 / 1051000 | TPS 221.688 | ETA 00:01:58
Time 00:05:40 | Step 1027050 / 1051000 | TPS 229.82 | ETA 00:01:44
Time 00:05:50 | Step 1029315 / 1051000 | TPS 226.36 | ETA 00:01:35
Time 00:06:00 | Step 1031595 / 1051000 | TPS 227.855 | ETA 00:01:25
Time 00:06:10 | Step 1033888 / 1051000 | TPS 229.117 | ETA 00:01:14
Time 00:06:20 | Step 1036133 / 1051000 | TPS 224.487 | ETA 00:01:06
Time 00:06:30 | Step 1038446 / 1051000 | TPS 231.279 | ETA 00:00:54
Time 00:06:40 | Step 1040673 / 1051000 | TPS 222.526 | ETA 00:00:46
Time 00:06:50 | Step 1042986 / 1051000 | TPS 231.15 | ETA 00:00:34
Time 00:07:00 | Step 1045227 / 1051000 | TPS 224.081 | ETA 00:00:25
Time 00:07:10 | Step 1047462 / 1051000 | TPS 223.325 | ETA 00:00:15
Time 00:07:20 | Step 1049746 / 1051000 | TPS 228.208 | ETA 00:00:05
Time 00:07:26 | Step 1051000 / 1051000 | TPS 222.696 | ETA 00:00:00
Average TPS: 224.296
---------
-- Neighborlist stats:
42153 normal updates / 335 forced updates / 0 dangerous updates
n_neigh_min: 36 / n_neigh_max: 196 / n_neigh_avg: 159.376
shortest rebuild period: 1
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_66.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_66.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_66.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_66.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_66.py:064  |  lj.set_params(mode='shift')
Equilibrium_66.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_66.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_66.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_66.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_66.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_66.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_66.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_66.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_66.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_66.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 15.0, tauP = 15.0, P = pressure);
Equilibrium_66.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_66.py:110  |                 group = hoomd.group.all(),
Equilibrium_66.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_66.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_66.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 1002001 / 1100000 | TPS 199.919 | ETA 00:08:10
Time 00:00:20 | Step 1004176 / 1100000 | TPS 217.383 | ETA 00:07:20
Time 00:00:30 | Step 1006388 / 1100000 | TPS 221.123 | ETA 00:07:03
Time 00:00:40 | Step 1008576 / 1100000 | TPS 218.695 | ETA 00:06:58
Time 00:00:50 | Step 1010798 / 1100000 | TPS 221.997 | ETA 00:06:41
Time 00:01:00 | Step 1013026 / 1100000 | TPS 222.755 | ETA 00:06:30
Time 00:01:10 | Step 1015285 / 1100000 | TPS 225.787 | ETA 00:06:15
Time 00:01:20 | Step 1017497 / 1100000 | TPS 221.036 | ETA 00:06:13
Time 00:01:30 | Step 1019721 / 1100000 | TPS 222.305 | ETA 00:06:01
Time 00:01:40 | Step 1021943 / 1100000 | TPS 222.19 | ETA 00:05:51
Time 00:01:50 | Step 1024189 / 1100000 | TPS 224.508 | ETA 00:05:37
Time 00:02:00 | Step 1026404 / 1100000 | TPS 221.462 | ETA 00:05:32
Time 00:02:10 | Step 1028585 / 1100000 | TPS 217.898 | ETA 00:05:27
Time 00:02:20 | Step 1030790 / 1100000 | TPS 220.429 | ETA 00:05:13
Time 00:02:30 | Step 1032928 / 1100000 | TPS 213.691 | ETA 00:05:13
Time 00:02:40 | Step 1035162 / 1100000 | TPS 223.389 | ETA 00:04:50
Time 00:02:50 | Step 1037303 / 1100000 | TPS 213.983 | ETA 00:04:53
Time 00:03:00 | Step 1039453 / 1100000 | TPS 214.99 | ETA 00:04:41
Time 00:03:10 | Step 1041655 / 1100000 | TPS 220.184 | ETA 00:04:24
Time 00:03:20 | Step 1043823 / 1100000 | TPS 216.685 | ETA 00:04:19
Time 00:03:30 | Step 1046048 / 1100000 | TPS 222.326 | ETA 00:04:02
Time 00:03:40 | Step 1048297 / 1100000 | TPS 224.72 | ETA 00:03:50
Time 00:03:50 | Step 1050512 / 1100000 | TPS 221.371 | ETA 00:03:43
Time 00:04:00 | Step 1052785 / 1100000 | TPS 227.284 | ETA 00:03:27
Time 00:04:10 | Step 1055055 / 1100000 | TPS 226.858 | ETA 00:03:18
Time 00:04:20 | Step 1057258 / 1100000 | TPS 220.229 | ETA 00:03:14
Time 00:04:30 | Step 1059498 / 1100000 | TPS 223.859 | ETA 00:03:00
Time 00:04:40 | Step 1061708 / 1100000 | TPS 220.941 | ETA 00:02:53
Time 00:04:50 | Step 1063884 / 1100000 | TPS 217.422 | ETA 00:02:46
Time 00:05:00 | Step 1066065 / 1100000 | TPS 218.094 | ETA 00:02:35
Time 00:05:10 | Step 1068282 / 1100000 | TPS 221.556 | ETA 00:02:23
Time 00:05:20 | Step 1070457 / 1100000 | TPS 217.475 | ETA 00:02:15
Time 00:05:30 | Step 1072695 / 1100000 | TPS 223.742 | ETA 00:02:02
Time 00:05:40 | Step 1074939 / 1100000 | TPS 224.297 | ETA 00:01:51
Time 00:05:50 | Step 1077182 / 1100000 | TPS 224.152 | ETA 00:01:41
Time 00:06:00 | Step 1079486 / 1100000 | TPS 230.267 | ETA 00:01:29
Time 00:06:10 | Step 1081813 / 1100000 | TPS 232.671 | ETA 00:01:18
Time 00:06:20 | Step 1084069 / 1100000 | TPS 225.434 | ETA 00:01:10
Time 00:06:30 | Step 1086299 / 1100000 | TPS 222.945 | ETA 00:01:01
Time 00:06:40 | Step 1088490 / 1100000 | TPS 218.956 | ETA 00:00:52
Time 00:06:50 | Step 1090728 / 1100000 | TPS 223.768 | ETA 00:00:41
Time 00:07:00 | Step 1092867 / 1100000 | TPS 213.706 | ETA 00:00:33
Time 00:07:10 | Step 1095048 / 1100000 | TPS 218.006 | ETA 00:00:22
Time 00:07:20 | Step 1097220 / 1100000 | TPS 217.094 | ETA 00:00:12
Time 00:07:30 | Step 1099423 / 1100000 | TPS 220.29 | ETA 00:00:02
Time 00:07:32 | Step 1100000 / 1100000 | TPS 222.679 | ETA 00:00:00
Average TPS: 220.852
---------
-- Neighborlist stats:
43869 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 50 / n_neigh_max: 196 / n_neigh_avg: 156.221
shortest rebuild period: 1
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_68.py:045  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_68.py:049  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_68.py:061  |  nl = hoomd.md.nlist.tree()
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_68.py:063  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_68.py:064  |  lj.set_params(mode='shift')
Equilibrium_68.py:068  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_68.py:069  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_68.py:070  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_68.py:071  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_68.py:072  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_68.py:073  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_68.py:077  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_68.py:081  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_68.py:082  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_68.py:087  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 15.0, tauP = 15.0, P = pressure);
Equilibrium_68.py:094  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_68.py:110  |                 group = hoomd.group.all(),
Equilibrium_68.py:108  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_68.py:112  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_68.py:123  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 1051004 / 1149000 | TPS 200.394 | ETA 00:08:09
Time 00:00:20 | Step 1053184 / 1149000 | TPS 217.938 | ETA 00:07:19
Time 00:00:30 | Step 1055372 / 1149000 | TPS 218.676 | ETA 00:07:08
Time 00:00:40 | Step 1057557 / 1149000 | TPS 218.363 | ETA 00:06:58
Time 00:00:50 | Step 1059708 / 1149000 | TPS 214.909 | ETA 00:06:55
Time 00:01:00 | Step 1061867 / 1149000 | TPS 215.868 | ETA 00:06:43
Time 00:01:10 | Step 1064061 / 1149000 | TPS 219.391 | ETA 00:06:27
Time 00:01:20 | Step 1066251 / 1149000 | TPS 218.979 | ETA 00:06:17
Time 00:01:30 | Step 1068522 / 1149000 | TPS 226.95 | ETA 00:05:54
Time 00:01:40 | Step 1070787 / 1149000 | TPS 226.38 | ETA 00:05:45
Time 00:01:50 | Step 1073032 / 1149000 | TPS 224.413 | ETA 00:05:38
Time 00:02:00 | Step 1075265 / 1149000 | TPS 223.247 | ETA 00:05:30
Time 00:02:10 | Step 1077463 / 1149000 | TPS 219.661 | ETA 00:05:25
Time 00:02:20 | Step 1079630 / 1149000 | TPS 216.625 | ETA 00:05:20
Time 00:02:30 | Step 1081792 / 1149000 | TPS 216.044 | ETA 00:05:11
Time 00:02:40 | Step 1083919 / 1149000 | TPS 212.616 | ETA 00:05:06
Time 00:02:50 | Step 1086072 / 1149000 | TPS 215.282 | ETA 00:04:52
Time 00:03:00 | Step 1088290 / 1149000 | TPS 221.738 | ETA 00:04:33
Time 00:03:10 | Step 1090493 / 1149000 | TPS 220.159 | ETA 00:04:25
Time 00:03:20 | Step 1092663 / 1149000 | TPS 216.908 | ETA 00:04:19
Time 00:03:30 | Step 1094884 / 1149000 | TPS 222.009 | ETA 00:04:03
Time 00:03:40 | Step 1097135 / 1149000 | TPS 225.086 | ETA 00:03:50
Time 00:03:50 | Step 1099390 / 1149000 | TPS 225.38 | ETA 00:03:40
Time 00:04:00 | Step 1101640 / 1149000 | TPS 224.839 | ETA 00:03:30
Time 00:04:10 | Step 1103874 / 1149000 | TPS 223.33 | ETA 00:03:22
Time 00:04:20 | Step 1106080 / 1149000 | TPS 220.46 | ETA 00:03:14
Time 00:04:30 | Step 1109731 / 1149000 | TPS 365.093 | ETA 00:01:47
Time 00:04:40 | Step 1116301 / 1149000 | TPS 649.086 | ETA 00:00:50
Time 00:04:50 | Step 1122901 / 1149000 | TPS 651.463 | ETA 00:00:40
Time 00:05:00 | Step 1129501 / 1149000 | TPS 651.071 | ETA 00:00:29
Time 00:05:10 | Step 1136101 / 1149000 | TPS 651.011 | ETA 00:00:19
Time 00:05:20 | Step 1142701 / 1149000 | TPS 651.512 | ETA 00:00:09
Time 00:05:30 | Step 1149000 / 1149000 | TPS 673.282 | ETA 00:00:00
Average TPS: 302.919
---------
-- Neighborlist stats:
26189 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 2 / n_neigh_avg: 0.000444247
shortest rebuild period: 1
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mTraceback (most recent call last):
  File "Equilibrium_70.py", line 41, in <module>
    hoomd.context.initialize("--mode=gpu", memory_traceback = True);
TypeError: initialize() got an unexpected keyword argument 'memory_traceback'
