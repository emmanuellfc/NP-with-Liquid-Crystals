[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0m**ERROR**: nlist.tree(): Particle 541 is out of bounds (x: 83.8824, y: 28.2493, z: 41.4544, fx: 3.70204, fy: 1.57836, fz:2.08244)
HOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_70.py:047  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_70.py:051  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_70.py:063  |  nl = hoomd.md.nlist.tree(r_buff = 0.5, check_period = 1); #-----Implementation of fast neighborhood list.
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_70.py:065  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_70.py:066  |  lj.set_params(mode='shift')
Equilibrium_70.py:070  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_70.py:071  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_70.py:072  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_70.py:073  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_70.py:074  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_70.py:075  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_70.py:079  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_70.py:083  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_70.py:084  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_70.py:089  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 17.0, tauP = 17.0, P = pressure);
Equilibrium_70.py:096  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_70.py:112  |                 group = hoomd.group.all(),
Equilibrium_70.py:110  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_70.py:114  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_70.py:125  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 690608 / 788000 | TPS 260.799 | ETA 00:06:13
Time 00:00:20 | Step 693495 / 788000 | TPS 288.449 | ETA 00:05:27
Time 00:00:30 | Step 696364 / 788000 | TPS 286.708 | ETA 00:05:19
Time 00:00:40 | Step 699257 / 788000 | TPS 289.091 | ETA 00:05:06
Time 00:00:50 | Step 702173 / 788000 | TPS 291.574 | ETA 00:04:54
Time 00:01:00 | Step 705062 / 788000 | TPS 288.898 | ETA 00:04:47
Time 00:01:10 | Step 707910 / 788000 | TPS 284.77 | ETA 00:04:41
Time 00:01:20 | Step 710734 / 788000 | TPS 282.237 | ETA 00:04:33
Time 00:01:30 | Step 713510 / 788000 | TPS 277.469 | ETA 00:04:28
Time 00:01:40 | Step 716298 / 788000 | TPS 278.795 | ETA 00:04:17
Time 00:01:50 | Step 719072 / 788000 | TPS 277.352 | ETA 00:04:08
Time 00:02:00 | Step 721843 / 788000 | TPS 276.845 | ETA 00:03:58
Time 00:02:10 | Step 724600 / 788000 | TPS 275.585 | ETA 00:03:50
Time 00:02:20 | Step 727357 / 788000 | TPS 275.446 | ETA 00:03:40
Time 00:02:30 | Step 730172 / 788000 | TPS 281.495 | ETA 00:03:25
Time 00:02:40 | Step 732988 / 788000 | TPS 281.373 | ETA 00:03:15
Time 00:02:50 | Step 735855 / 788000 | TPS 286.686 | ETA 00:03:01
Traceback (most recent call last):
  File "Equilibrium_70.py", line 125, in <module>
    hoomd.run(steps)
  File "/usr/local/lib/python3.5/dist-packages/hoomd/__init__.py", line 194, in run
    context.current.system.run(int(tsteps), callback_period, callback, limit_hours, int(limit_multiple));
RuntimeError: Error updating neighborlist
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_72.py:047  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_72.py:051  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_72.py:063  |  nl = hoomd.md.nlist.tree(r_buff = 0.5, check_period = 1); #-----Implementation of fast neighborhood list.
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_72.py:065  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_72.py:066  |  lj.set_params(mode='shift')
Equilibrium_72.py:070  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_72.py:071  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_72.py:072  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_72.py:073  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_72.py:074  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_72.py:075  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_72.py:079  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_72.py:083  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_72.py:084  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_72.py:089  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 18.0, tauP = 18.0, P = pressure);
Equilibrium_72.py:096  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_72.py:112  |                 group = hoomd.group.all(),
Equilibrium_72.py:110  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_72.py:114  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_72.py:125  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 739651 / 837000 | TPS 265.062 | ETA 00:06:07
Time 00:00:20 | Step 742635 / 837000 | TPS 298.221 | ETA 00:05:16
Time 00:00:30 | Step 748501 / 837000 | TPS 570.964 | ETA 00:02:34
Time 00:00:40 | Step 755101 / 837000 | TPS 643.765 | ETA 00:02:07
Time 00:00:50 | Step 761701 / 837000 | TPS 644.316 | ETA 00:01:56
Time 00:01:01 | Step 768301 / 837000 | TPS 643.841 | ETA 00:01:46
Time 00:01:11 | Step 774901 / 837000 | TPS 644.346 | ETA 00:01:36
Time 00:01:21 | Step 781501 / 837000 | TPS 644.048 | ETA 00:01:26
Time 00:01:31 | Step 788101 / 837000 | TPS 643.879 | ETA 00:01:15
Time 00:01:42 | Step 794701 / 837000 | TPS 644.369 | ETA 00:01:05
Time 00:01:52 | Step 801301 / 837000 | TPS 643.936 | ETA 00:00:55
Time 00:02:02 | Step 807901 / 837000 | TPS 644.452 | ETA 00:00:45
Time 00:02:12 | Step 814501 / 837000 | TPS 644.019 | ETA 00:00:34
Time 00:02:23 | Step 821101 / 837000 | TPS 643.889 | ETA 00:00:24
Time 00:02:33 | Step 827701 / 837000 | TPS 644.334 | ETA 00:00:14
Time 00:02:43 | Step 834301 / 837000 | TPS 643.876 | ETA 00:00:04
Time 00:02:47 | Step 837000 / 837000 | TPS 698.213 | ETA 00:00:00
Average TPS: 597.515
---------
-- Neighborlist stats:
2058 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 2 / n_neigh_avg: 0.000666371
shortest rebuild period: 1
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0m**ERROR**: nlist.tree(): Particle 394 is out of bounds (x: 59.7819, y: 144.674, z: 16.7405, fx: 2.65935, fy: 5.72569, fz:1.10468)
HOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_74.py:047  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_74.py:051  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_74.py:063  |  nl = hoomd.md.nlist.tree(r_buff = 0.5, check_period = 1); #-----Implementation of fast neighborhood list.
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_74.py:065  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_74.py:066  |  lj.set_params(mode='shift')
Equilibrium_74.py:070  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_74.py:071  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_74.py:072  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_74.py:073  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_74.py:074  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_74.py:075  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_74.py:079  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_74.py:083  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_74.py:084  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_74.py:089  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 20.0, tauP = 20.0, P = pressure);
Equilibrium_74.py:096  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_74.py:112  |                 group = hoomd.group.all(),
Equilibrium_74.py:110  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_74.py:114  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_74.py:125  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 782896 / 880000 | TPS 289.579 | ETA 00:05:35
Time 00:00:20 | Step 786077 / 880000 | TPS 317.993 | ETA 00:04:55
Time 00:00:30 | Step 789307 / 880000 | TPS 322.806 | ETA 00:04:40
Time 00:00:40 | Step 792478 / 880000 | TPS 317.089 | ETA 00:04:36
Time 00:00:50 | Step 795623 / 880000 | TPS 314.392 | ETA 00:04:28
Time 00:01:00 | Step 798773 / 880000 | TPS 314.944 | ETA 00:04:17
Time 00:01:10 | Step 802015 / 880000 | TPS 324.149 | ETA 00:04:00
Time 00:01:20 | Step 805204 / 880000 | TPS 318.887 | ETA 00:03:54
Time 00:01:30 | Step 808323 / 880000 | TPS 311.837 | ETA 00:03:49
Time 00:01:40 | Step 811394 / 880000 | TPS 307.086 | ETA 00:03:43
Time 00:01:50 | Step 814462 / 880000 | TPS 306.726 | ETA 00:03:33
Time 00:02:00 | Step 817597 / 880000 | TPS 313.464 | ETA 00:03:19
Time 00:02:10 | Step 820763 / 880000 | TPS 316.551 | ETA 00:03:07
Time 00:02:20 | Step 823978 / 880000 | TPS 321.325 | ETA 00:02:54
Traceback (most recent call last):
  File "Equilibrium_74.py", line 125, in <module>
    hoomd.run(steps)
  File "/usr/local/lib/python3.5/dist-packages/hoomd/__init__.py", line 194, in run
    context.current.system.run(int(tsteps), callback_period, callback, limit_hours, int(limit_multiple));
RuntimeError: Error updating neighborlist
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0m**ERROR**: nlist.tree(): Particle 314 is out of bounds (x: -39.943, y: 2.7777, z: 6.5703, fx: -0.943216, fy: 0.600363, fz:0.737397)
HOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_76.py:047  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_76.py:051  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_76.py:063  |  nl = hoomd.md.nlist.tree(r_buff = 0.5, check_period = 1); #-----Implementation of fast neighborhood list.
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_76.py:065  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_76.py:066  |  lj.set_params(mode='shift')
Equilibrium_76.py:070  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_76.py:071  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_76.py:072  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_76.py:073  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_76.py:074  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_76.py:075  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_76.py:079  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_76.py:083  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_76.py:084  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_76.py:089  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 20.0, tauP = 20.0, P = pressure);
Equilibrium_76.py:096  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_76.py:112  |                 group = hoomd.group.all(),
Equilibrium_76.py:110  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_76.py:114  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_76.py:125  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 831925 / 929000 | TPS 292.379 | ETA 00:05:32
Time 00:00:20 | Step 835172 / 929000 | TPS 324.601 | ETA 00:04:49
Time 00:00:30 | Step 838353 / 929000 | TPS 318.069 | ETA 00:04:44
Traceback (most recent call last):
  File "Equilibrium_76.py", line 125, in <module>
    hoomd.run(steps)
  File "/usr/local/lib/python3.5/dist-packages/hoomd/__init__.py", line 194, in run
    context.current.system.run(int(tsteps), callback_period, callback, limit_hours, int(limit_multiple));
RuntimeError: Error updating neighborlist
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_78.py:047  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_78.py:051  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_78.py:063  |  nl = hoomd.md.nlist.tree(r_buff = 0.5, check_period = 1); #-----Implementation of fast neighborhood list.
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_78.py:065  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_78.py:066  |  lj.set_params(mode='shift')
Equilibrium_78.py:070  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_78.py:071  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_78.py:072  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_78.py:073  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_78.py:074  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_78.py:075  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_78.py:079  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_78.py:083  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_78.py:084  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_78.py:089  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 20.0, tauP = 20.0, P = pressure);
Equilibrium_78.py:096  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_78.py:112  |                 group = hoomd.group.all(),
Equilibrium_78.py:110  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_78.py:114  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_78.py:125  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 880864 / 978000 | TPS 286.274 | ETA 00:05:39
Time 00:00:20 | Step 884019 / 978000 | TPS 315.308 | ETA 00:04:58
Time 00:00:30 | Step 887185 / 978000 | TPS 316.409 | ETA 00:04:47
Time 00:00:40 | Step 890243 / 978000 | TPS 305.715 | ETA 00:04:47
Time 00:00:50 | Step 895894 / 978000 | TPS 565.075 | ETA 00:02:25
Time 00:01:00 | Step 902401 / 978000 | TPS 635.285 | ETA 00:01:59
Time 00:01:10 | Step 909001 / 978000 | TPS 641.465 | ETA 00:01:47
Time 00:01:21 | Step 915601 / 978000 | TPS 642.06 | ETA 00:01:37
Time 00:01:31 | Step 922201 / 978000 | TPS 641.615 | ETA 00:01:26
Time 00:01:41 | Step 928801 / 978000 | TPS 641.987 | ETA 00:01:16
Time 00:01:51 | Step 935401 / 978000 | TPS 641.571 | ETA 00:01:06
Time 00:02:02 | Step 942001 / 978000 | TPS 641.392 | ETA 00:00:56
Time 00:02:12 | Step 948601 / 978000 | TPS 641.904 | ETA 00:00:45
Time 00:02:22 | Step 955201 / 978000 | TPS 641.376 | ETA 00:00:35
Time 00:02:33 | Step 961801 / 978000 | TPS 641.947 | ETA 00:00:25
Time 00:02:43 | Step 968401 / 978000 | TPS 641.371 | ETA 00:00:14
Time 00:02:53 | Step 975001 / 978000 | TPS 641.417 | ETA 00:00:04
Time 00:02:57 | Step 978000 / 978000 | TPS 690.283 | ETA 00:00:00
Average TPS: 562.577
---------
-- Neighborlist stats:
4593 normal updates / 334 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 2 / n_neigh_avg: 0.000666371
shortest rebuild period: 1
** run complete **
[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-smi'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-debugdump'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-persistenced'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-control'
[0m[33mWARNING: Skipping user bind, non existent bind point (file) in container: '/usr/bin/nvidia-cuda-mps-server'
[0mHOOMD-blue 2.3.5 CUDA (8.0) DOUBLE HPMC_MIXED TBB SSE SSE2 
Compiled: 10/08/18
Copyright 2009-2018 The Regents of the University of Michigan.
-----
You are using HOOMD-blue. Please cite the following:
* J A Anderson, C D Lorenz, and A Travesset. "General purpose molecular dynamics
  simulations fully implemented on graphics processing units", Journal of
  Computational Physics 227 (2008) 5342--5359
* J Glaser, T D Nguyen, J A Anderson, P Liu, F Spiga, J A Millan, D C Morse, and
  S C Glotzer. "Strong scaling of general-purpose molecular dynamics simulations
  on GPUs", Computer Physics Communications 192 (2015) 97--107
-----
notice(2): This system is not compute exclusive, using local rank to select GPUs
HOOMD-blue is running on the following GPU(s):
 [0]            Tesla K20m  13 SM_3.5 @ 0.706 GHz, 4743 MiB DRAM
Equilibrium_80.py:047  |  system = hoomd.init.read_gsd(ramp_file,frame = -1)
notice(2): Group "all" created containing 1004 particles
Equilibrium_80.py:051  |  rigid = hoomd.md.constrain.rigid();
notice(2): constrain.rigid(): Creating 1000 rigid bodies (adding 8000 particles)
Equilibrium_80.py:063  |  nl = hoomd.md.nlist.tree(r_buff = 0.5, check_period = 1); #-----Implementation of fast neighborhood list.
-----
You are using tree neighbor lists. Please cite the following:
* M P Howard, J A Anderson, A Nikoubashman, S C Glotzer, and A Z
  Panagiotopoulos. "Efficient neighbor list calculation for molecular simulation
  of colloidal systems using graphics processing units", Computer Physics
  Communications 203 (2016) 45--52
-----
Equilibrium_80.py:065  |  lj = hoomd.md.pair.lj(r_cut = 3.5, nlist=nl)
Equilibrium_80.py:066  |  lj.set_params(mode='shift')
Equilibrium_80.py:070  |  lj.pair_coeff.set('NP','NP', epsilon = 1.0, sigma = 5.0);
Equilibrium_80.py:071  |  lj.pair_coeff.set('M' ,'M' , epsilon = 1.0, sigma = 1.0);
Equilibrium_80.py:072  |  lj.pair_coeff.set('A' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_80.py:073  |  lj.pair_coeff.set('M' ,'A' , epsilon = 1.0, sigma = 1.0);
Equilibrium_80.py:074  |  lj.pair_coeff.set('NP','M' , epsilon = 1.0, sigma = 3.0);
Equilibrium_80.py:075  |  lj.pair_coeff.set('NP','A' , epsilon = 1.0, sigma = 3.0);
Equilibrium_80.py:079  |  hoomd.md.integrate.mode_standard(dt = 0.005);
Equilibrium_80.py:083  |  nanoparticles = hoomd.group.type(name = 'Nano_Particles', type = 'NP');
notice(2): Group "Nano_Particles" created containing 4 particles
Equilibrium_80.py:084  |  mesogens = hoomd.group.rigid_center();
notice(2): Group "rigid_center" created containing 1000 particles
notice(2): Group "NP_Mes" created containing 1004 particles
Equilibrium_80.py:089  |  npt = hoomd.md.integrate.npt(group = mesogens, kT = temp, tau = 20.0, tauP = 20.0, P = pressure);
Equilibrium_80.py:096  |  log = hoomd.analyze.log(filename = log_file,
                         quantities = ['num_particles',
                                     'ndof',
                                     'translational_ndof',
                                     'rotational_ndof',
                                     'potential_energy',
                                     'kinetic_energy',
                                     'translational_kinetic_energy',
                                     'rotational_kinetic_energy',
                                     'temperature',
                                     'pressure',
                                      'volume'],
                         period = 1e3,
                         overwrite = True);
Equilibrium_80.py:112  |                 group = hoomd.group.all(),
Equilibrium_80.py:110  |  gsd = hoomd.dump.gsd(gsd_file,
               period = 1e3,
               group = hoomd.group.all(),
               overwrite=True); 
Equilibrium_80.py:114  |  meso_gsd = hoomd.dump.gsd(meso_gsd_file,
               period = 1e3,
               group = mesogens,
               overwrite=True); 
Equilibrium_80.py:125  |  hoomd.run(steps)
notice(2): -- Neighborlist exclusion statistics -- :
notice(2): Particles with 0 exclusions             : 9004
notice(2): Neighbors included by diameter          : no
notice(2): Neighbors excluded when in the same body: yes
** starting run **
Time 00:00:10 | Step 929915 / 1027000 | TPS 291.365 | ETA 00:05:33
Time 00:00:20 | Step 933096 / 1027000 | TPS 317.914 | ETA 00:04:55
Time 00:00:30 | Step 936215 / 1027000 | TPS 311.889 | ETA 00:04:51
Time 00:00:40 | Step 939168 / 1027000 | TPS 295.201 | ETA 00:04:57
Time 00:00:50 | Step 944624 / 1027000 | TPS 545.581 | ETA 00:02:30
Time 00:01:00 | Step 951001 / 1027000 | TPS 635.511 | ETA 00:01:59
Time 00:01:10 | Step 957601 / 1027000 | TPS 651.431 | ETA 00:01:46
Time 00:01:20 | Step 964201 / 1027000 | TPS 650.795 | ETA 00:01:36
Time 00:01:30 | Step 970801 / 1027000 | TPS 651.408 | ETA 00:01:26
Time 00:01:40 | Step 977401 / 1027000 | TPS 650.91 | ETA 00:01:16
Time 00:01:50 | Step 984001 / 1027000 | TPS 650.544 | ETA 00:01:06
Time 00:02:01 | Step 990601 / 1027000 | TPS 651.485 | ETA 00:00:55
Time 00:02:11 | Step 997201 / 1027000 | TPS 650.928 | ETA 00:00:45
Time 00:02:21 | Step 1003801 / 1027000 | TPS 651.506 | ETA 00:00:35
Time 00:02:31 | Step 1010401 / 1027000 | TPS 650.954 | ETA 00:00:25
Time 00:02:41 | Step 1017001 / 1027000 | TPS 650.918 | ETA 00:00:15
Time 00:02:51 | Step 1023601 / 1027000 | TPS 651.497 | ETA 00:00:05
Time 00:02:56 | Step 1027000 / 1027000 | TPS 664.795 | ETA 00:00:00
Average TPS: 566.055
---------
-- Neighborlist stats:
4890 normal updates / 335 forced updates / 0 dangerous updates
n_neigh_min: 0 / n_neigh_max: 0 / n_neigh_avg: 0
shortest rebuild period: 1
** run complete **
